(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{379:function(t,e,a){"use strict";a.r(e);var n=a(14),r=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"und-debug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#und-debug"}},[t._v("#")]),t._v(" und debug")]),t._v(" "),e("p",[t._v("Tool for helping with debugging your application")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("und debug [flags]\n")])])]),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  -h, --help   help for debug\n")])])]),e("h3",{attrs:{id:"see-also"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" SEE ALSO")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und.html"}},[t._v("und")]),t._v("\t - Unification Mainchain App")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_addr.html"}},[t._v("und debug addr")]),t._v("\t - Convert an address between hex and bech32")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_bech32-convert.html"}},[t._v("und debug bech32-convert")]),t._v("\t - Convert any bech32 string to the und prefix")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_codec.html"}},[t._v("und debug codec")]),t._v("\t - Tool for helping with debugging your application codec")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_prefixes.html"}},[t._v("und debug prefixes")]),t._v("\t - List prefixes used for Human-Readable Part (HRP) in Bech32")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_pubkey.html"}},[t._v("und debug pubkey")]),t._v("\t - Decode a pubkey from proto JSON")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_pubkey-raw.html"}},[t._v("und debug pubkey-raw")]),t._v("\t - Decode a ED25519 or secp256k1 pubkey from hex, base64, or bech32")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_debug_raw-bytes.html"}},[t._v("und debug raw-bytes")]),t._v("\t - Convert raw bytes output (eg. [10 21 13 255]) to hex")],1)]),t._v(" "),e("h6",{attrs:{id:"auto-generated-by-spf13-cobra-on-6-may-2025"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-generated-by-spf13-cobra-on-6-may-2025"}},[t._v("#")]),t._v(" Auto generated by spf13/cobra on 6-May-2025")])])}),[],!1,null,null,null);e.default=r.exports}}]);