(window.webpackJsonp=window.webpackJsonp||[]).push([[473],{755:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ooo-contract-initialisation-and-data-request-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ooo-contract-initialisation-and-data-request-guide"}},[t._v("#")]),t._v(" OoO Contract Initialisation and Data Request Guide")]),t._v(" "),a("p",[t._v("This guide will walk you through the steps required to initialise your contract (add\nTokens and increase the Router's allowance), and also make a data request.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("ensure you have gone though the "),a("RouterLink",{attrs:{to:"/ooo/guide/implementation.html"}},[t._v("implementation")]),t._v(" guide\nand deployed your smart contract before continuing with this guide.")],1)]),t._v(" "),a("p",[t._v("Run the "),a("code",[t._v("truffle")]),t._v(" development console, and connect to the Rinkeby testnet:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("npx truffle console "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sepolia\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("See "),a("RouterLink",{attrs:{to:"/ooo/guide/ooo_api.html"}},[t._v("OoO Data API Guide")]),t._v(" for the latest "),a("strong",[t._v("Rinkeby")]),t._v(" OoO Finchains data\nprovider address, used for the "),a("code",[t._v("provider")]),t._v(" variable below")],1)]),t._v(" "),a("p",[t._v("Within the "),a("code",[t._v("truffle")]),t._v(" console, load the contract instances, and accounts\nready for interaction")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" accounts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await web3.eth.getAccounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" consumerOwner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" accounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" provider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x611661f4B5D82079E924AcE2A6D113fAbd214b14"')]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" myDataConsumer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await MyDataConsumer.deployed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_1-contract-initialisation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-contract-initialisation"}},[t._v("#")]),t._v(" 1. Contract Initialisation")]),t._v(" "),a("p",[t._v("The following steps need only be done periodically, to ensure all parties have\nthe correct amount of tokens and gas to pay for data.")]),t._v(" "),a("p",[t._v("Go to "),a("a",{attrs:{href:"https://sepolia.etherscan.io/address/0xb07C72acF3D7A5E9dA28C56af6F93862f8cc8196#writeContract",target:"_blank",rel:"noopener noreferrer"}},[t._v("xFUNDMOCK"),a("OutboundLink")],1),t._v("\non Etherscan, and connect MetaMask "),a("strong",[t._v("with the account used to deploy the "),a("code",[t._v("MyDataConsumer")]),t._v("\nsmart contract")]),t._v(", then run the "),a("code",[t._v("gimme()")]),t._v(" function. This is a faucet function, and will\nsupply your wallet with 10 "),a("code",[t._v("xFUNDMOCK")]),t._v(" tokens. You may do this once per hour.")]),t._v(" "),a("p",[t._v("Get the deployed address for your "),a("code",[t._v("MyDataConsumer")]),t._v(" smart contract:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myDataConsumer.address\n")])])]),a("p",[t._v("Next, using either Etherscan, or MetaMask, transfer 5 "),a("code",[t._v("xFUNDMOCK")]),t._v(" tokens to your\n"),a("code",[t._v("MyDataConsumer")]),t._v(" contract address.")]),t._v(" "),a("p",[t._v("Finally, we need to allow the "),a("code",[t._v("Router")]),t._v(" smart contract to pay fees on the "),a("code",[t._v("MyDataConsumer")]),t._v("\ncontract's behalf:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myDataConsumer.increaseRouterAllowance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"115792089237316195423570985008687907853269984665640564039457584007913129639935"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("from: consumerOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-data-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-data-request"}},[t._v("#")]),t._v(" 2. Data Request")]),t._v(" "),a("p",[t._v("Now that the "),a("code",[t._v("MyDataConsumer")]),t._v(" smart contract has been initialised, we can request data to\nbe sent to the smart contract. You may need to top up Consumer contract's\ntokens every so often.")]),t._v(" "),a("p",[t._v("First, check the current "),a("code",[t._v("price")]),t._v(" in your "),a("code",[t._v("MyDataConsumer")]),t._v(" contract. Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" priceBefore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await myDataConsumer.price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" priceBefore.toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The result should be 0.")]),t._v(" "),a("p",[t._v("Next, request some data from the provider. Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" endpoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" web3.utils.asciiToHex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BTC.USD.PR.AVI"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myDataConsumer.getData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000000")]),t._v(", endpoint, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("from: consumerOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The first command encodes the data endpoint (the data we want to get) into a bytes32\nvalue. We are requesting the mean ("),a("code",[t._v("PR.AVI")]),t._v(") US dollar ("),a("code",[t._v("USD")]),t._v(") price of Bitcoin ("),a("code",[t._v("BTC")]),t._v("), with\noutliers (very high or very low) values removed ("),a("code",[t._v("AVI")]),t._v(" as opposed to "),a("code",[t._v("AVG")]),t._v(")\nfrom the final mean calculation.")]),t._v(" "),a("p",[t._v("A full list of supported currency pairs is available from the "),a("a",{attrs:{href:"https://crypto.finchains.io/api/pairs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Finchains API"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("It may take a block or two for the request to be fully processed - the provider will listen for\nthe request, then submit a Tx with the data to the "),a("code",[t._v("Router")]),t._v(", which will forward it to\nyour smart contract.")]),t._v(" "),a("p",[t._v("After 30 seconds or so, run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" priceAfter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await myDataConsumer.price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" priceAfter.toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("If the price is still 0, simply run the following a couple more times:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" priceAfter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await myDataConsumer.price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" priceAfter.toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The price should now be a non-zero value.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("By default, the OoO sends all price data converted to "),a("code",[t._v("actualPrice * (10 ** 18)")]),t._v(" in\norder to remove any decimals.")]),t._v(" "),a("p",[t._v("To convert to the actual decimal price, you can for example:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("truffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" actualPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" web3.utils.fromWei"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priceAfter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntruffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepolia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" actualPrice.toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("p",[t._v("Next - see what data can be requested via the "),a("RouterLink",{attrs:{to:"/ooo/guide/ooo_api.html"}},[t._v("Finchains OoO API")]),t._v(".")],1)])}),[],!1,null,null,null);a.default=n.exports}}]);