(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{308:function(a,t,e){"use strict";e.r(t);var s=e(14),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"wrkchain-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wrkchain-example"}},[a._v("#")]),a._v(" WRKChain Example")]),a._v(" "),t("p",[a._v("This document will guide you though registering a new WRKChain and submitting hashes via a manual process. Although hash\nsubmission is usually automated with the WRKOracle software, this guide will help you understand the process, and allow\nfor testing.")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("IMPORTANT")]),a._v(" "),t("p",[a._v("Whenever you use "),t("code",[a._v("und")]),a._v(" to send Txs or query the chain ensure you pass the correct data to the "),t("code",[a._v("--chain-id")]),a._v(" and if\nnecessary "),t("code",[a._v("--node=")]),a._v(" flags so that you connect to the correct network!")])]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("Note")]),a._v(" "),t("p",[a._v("It is "),t("em",[a._v("HIGHLY")]),a._v(" recommended that you only undertake this guide on\neither "),t("RouterLink",{attrs:{to:"/mainchain/examples/local-devnet.html"}},[a._v("DevNet")]),a._v(" or TestNet first.")],1)]),a._v(" "),t("h4",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[a._v("#")]),a._v(" Contents")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#registering-your-wrkchain"}},[a._v("Registering your WRKChain")])]),t("li",[t("a",{attrs:{href:"#filter-wrkchain-metadata"}},[a._v("Filter WRKChain metadata")])]),t("li",[t("a",{attrs:{href:"#recording-hashes"}},[a._v("Recording Hashes")])]),t("li",[t("a",{attrs:{href:"#querying-a-wrkchain-on-mainchain"}},[a._v("Querying a WRKChain on Mainchain")])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"registering-your-wrkchain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#registering-your-wrkchain"}},[a._v("#")]),a._v(" Registering your WRKChain")]),a._v(" "),t("p",[a._v("Registration is required so that the WRKChain has an identifier on Mainchain.\nRegistration incurs a one-time fee.")]),a._v(" "),t("p",[a._v("The following "),t("code",[a._v("und")]),a._v(" command can be used to register your WRKChain, and assumes you have a local full node running,\nconnected to either DevNet or TestNet:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und tx wrkchain register "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--moniker")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[YOUR_MONIKER]"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--genesis")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[GENESIS_BLOCK_HASH]"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[WRKCHAIN NAME]"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--base")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[WRKCHAIN_TYPE]"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("from_account"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" --chain-id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("chain_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto --gas-adjustment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.5")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("[YOUR_MONIKER]")]),a._v(" - any alphanumeric identifier you want to give your WRKChain, e.g. wrkchain1")]),a._v(" "),t("li",[t("code",[a._v("[GENESIS_BLOCK_HASH]")]),a._v(" - the hash value for your genesis block. The "),t("code",[a._v("--genesis")]),a._v(" flag is optional. The hash can be\nobtained by running your genesis through a sha256 generator, for example.")]),a._v(" "),t("li",[t("code",[a._v("[WRKCHAIN NAME]")]),a._v(" - a name for your WRKChain, e.g. My First WRKChain. Optional")]),a._v(" "),t("li",[t("code",[a._v("[from_account]")]),a._v(" - your local account identifier (see "),t("RouterLink",{attrs:{to:"/mainchain/examples/accounts-wallets.html"}},[a._v("Accounts and Wallets")]),a._v("). This will be used\nas the WRKChain Owner. "),t("strong",[a._v("Only the owner will be able to submit block hashes, so it is important to keep this account\nsafe!")])],1),a._v(" "),t("li",[t("code",[a._v("[chain_id]")]),a._v(" - the ID of the chain to run the transaction on")]),a._v(" "),t("li",[t("code",[a._v("[WRKCHAIN_TYPE]")]),a._v(" - the type of WRKChain. Currently supported by WRKOracle are WRKChains built using "),t("code",[a._v("cosmos")]),a._v(", "),t("code",[a._v("eos")]),a._v("\n, "),t("code",[a._v("geth")]),a._v(", "),t("code",[a._v("neo")]),a._v(", "),t("code",[a._v("stellar")]),a._v(", "),t("code",[a._v("tendermint")]),a._v(".")])]),a._v(" "),t("p",[a._v('For example, we have a local account and key set up called "testwrk", and want\nto register a new WRKChain, with the moniker "wrkchain1" called "WRKChain Example 1":')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und tx wrkchain register "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--moniker")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"wrkchain1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--genesis")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"78521D6EFBEDF6D7EE9C73EDD3443B8021DADBE06ECE81F639B6EC57D8E3F3EA"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"WRKChain Example 1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--base")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tendermint"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--from")]),a._v(" testwrk --chain-id FUND-DevNet-2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto --gas-adjustment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.25")]),a._v("\n")])])]),t("p",[a._v("Once broadcast, you will receive confirmation with the TX Hash, which can be used to query the Tx.")]),a._v(" "),t("p",[a._v("Your WRKCHain's on-chain ID will be embedded in the Tx query result. Alternatively, you can run a search query to get\nyour WRKChain's details, for example:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und query wrkchain search "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--moniker")]),a._v(" wrkchain1 --chain-id FUND-DevNet-2\n")])])]),t("p",[a._v("will return a result similar to:")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"wrkchain_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"moniker"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"wrkchain1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"WRKChain Example 1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"genesis"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"78521D6EFBEDF6D7EE9C73EDD3443B8021DADBE06ECE81F639B6EC57D8E3F3EA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tendermint"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"lastblock"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"num_blocks"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"reg_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1585752449"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"owner"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"und1x8pl6wzqf9atkm77ymc5vn5dnpl5xytmn200xy"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),t("p",[a._v("The "),t("code",[a._v("wrkchain_id")]),a._v(" value is what is required to submit hashes, and find your WRKChain's submitted block hashes.")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("lastblock")]),a._v(" tells us for which block number hashes were last submitted for the WRKChain, and "),t("code",[a._v("num_blocks")]),a._v(" the number\nof block hashes the WRKChain has submitted in total. Finally, "),t("code",[a._v("reg_time")]),a._v(" is a UNIX timestamp for when the WRKChain was\nregistered on Mainchain.")]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("Important")]),a._v(": Only the "),t("code",[a._v("owner")]),a._v(" - i.e. the account used to register the WRKChain - will be able to submit block\nhashes.")])]),a._v(" "),t("h2",{attrs:{id:"filter-wrkchain-metadata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter-wrkchain-metadata"}},[a._v("#")]),a._v(" Filter WRKChain metadata")]),a._v(" "),t("p",[a._v("WRKChain metadata can be searched for on Mainchain:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("und query wrkchain search --moniker wrkchain1\nund query wrkchain search --owner und1chknpc8nf2tmj5582vhlvphnjyekc9ypspx5ay\nund query wrkchain search --page=2 --limit=100\n")])])]),t("h2",{attrs:{id:"recording-hashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recording-hashes"}},[a._v("#")]),a._v(" Recording Hashes")]),a._v(" "),t("p",[a._v("Once successfully registered, you will be able to submit block hashes however\nfrequently suits your needs. To simulate how the WRKOracle works, we can run the following command to submit hashes:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und tx wrkchain record "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wc_height")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("BLOCK_HEIGHT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--block_hash")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("BLOCK_HASH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--parent_hash")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("PARENT_HASH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hash1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("HASH1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hash2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("HASH2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hash3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("HASH3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("account_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" --chain-id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("chain_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto --gas-adjustment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.5")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("[BLOCK_HEIGHT]")]),a._v(" - the height/number of the WRKChain block you are submitting hashes for")]),a._v(" "),t("li",[t("code",[a._v("[BLOCK_HASH]")]),a._v(" - the main block hash")]),a._v(" "),t("li",[t("code",[a._v("[PARENT_HASH]")]),a._v(" - the main block's parent block hash (optional)")]),a._v(" "),t("li",[t("code",[a._v("[HASH1]")]),a._v(" - an optional, arbitrary hash. This can be, for example, the Tx Merkle root hash")]),a._v(" "),t("li",[t("code",[a._v("[HASH2]")]),a._v(" - an optional, arbitrary hash. This can be, for example, the Tx Merkle root hash")]),a._v(" "),t("li",[t("code",[a._v("[HASH3]")]),a._v(" - an optional, arbitrary hash. This can be, for example, the Tx Merkle root hash")]),a._v(" "),t("li",[t("code",[a._v("[from_account]")]),a._v(" - your local account identifier (see "),t("RouterLink",{attrs:{to:"/mainchain/examples/accounts-wallets.html"}},[a._v("Accounts and Wallets")]),a._v("). This "),t("strong",[a._v("must")]),a._v(" be\nthe same as the "),t("strong",[a._v("owner")]),a._v(" used to register the WRKChain.")],1),a._v(" "),t("li",[t("code",[a._v("[chain_id]")]),a._v(" - the ID of the chain to run the transaction on")])]),a._v(" "),t("p",[a._v("For example, if we just want to submit the block hash for block number 123, we can run:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und tx wrkchain record "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wc_height")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--block_hash")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1BB457C575E72D7401C809B66290FAC56347223912F2484BA7E881D42495CD0F "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--from")]),a._v(" testwrk --chain-id FUND-DevNet-2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto --gas-adjustment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.5")]),a._v("\n")])])]),t("h2",{attrs:{id:"querying-a-wrkchain-on-mainchain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#querying-a-wrkchain-on-mainchain"}},[a._v("#")]),a._v(" Querying a WRKChain on Mainchain")]),a._v(" "),t("p",[a._v("To retrieve a particular hash submitted for a WRKChain, we can run:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und query wrkchain block "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("WRKCHAIN_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("HEIGHT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("[WRKCHAIN_ID]")]),a._v(" - the numeric ID for the WRKChain")]),a._v(" "),t("li",[t("code",[a._v("[HEIGHT]")]),a._v(" - the block number we wish to retrieve")])]),a._v(" "),t("p",[a._v("If "),t("code",[a._v("[HEIGHT]")]),a._v(" has been submitted for "),t("code",[a._v("[WRKCHAIN_ID]")]),a._v(", the data will be\nreturned in a JSON object, If not, the returned object will contain empty\nvalues, meaning the WRKChain has not submitted a value for this block\nheight.")])])}),[],!1,null,null,null);t.default=r.exports}}]);