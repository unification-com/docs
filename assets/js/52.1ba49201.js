(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{333:function(s,a,t){"use strict";t.r(a);var e=t(14),o=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"using-cosmovisor-with-und-quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-cosmovisor-with-und-quick-start"}},[s._v("#")]),s._v(" Using Cosmovisor with und: Quick Start")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("This guide is for operators already running a node who have not yet implemented Cosmovisor. For new nodes, please see\nthe "),a("RouterLink",{attrs:{to:"/mainchain/software/cosmovisor/install_und_with_cosmovisor.html"}},[s._v("Install und with Cosmovisor")]),s._v(" documentation.")],1)]),s._v(" "),a("p",[a("code",[s._v("cosmovisor")]),s._v(" can be used for all node types (sentries, RPCs, seeds etc.), not just validator nodes.")]),s._v(" "),a("p",[s._v("See "),a("a",{attrs:{href:"https://docs.cosmos.network/v0.44/run-node/cosmovisor.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cosmos SDK's Cosmovidor Docs"),a("OutboundLink")],1),s._v(" for full documentation.")]),s._v(" "),a("p",[s._v("This is a quick-start guide specifically for getting "),a("code",[s._v("und")]),s._v(" up and running using "),a("code",[s._v("cosmovisor")]),s._v(", and is aimed at operators\nwho are already running a FUND node.")]),s._v(" "),a("p",[s._v("It is recommended that node operators fully read and understand the official documentation above before proceeding.")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("The above documentation states that "),a("code",[s._v("go get github.com/cosmos/cosmos-sdk/cosmovisor/cmd/cosmovisor")]),s._v(" should be run\nto install "),a("code",[s._v("cosmovisor")]),s._v(". However, this is not currently possible due to "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/11305",target:"_blank",rel:"noopener noreferrer"}},[s._v("issue 11305"),a("OutboundLink")],1),s._v(".\nAs such, this guide directly downloads the "),a("code",[s._v("cosmovisor")]),s._v(" binary from the Cosmos SDK repo. If you prefer to install via "),a("code",[s._v("go")]),s._v(",\nyou will need to install "),a("code",[s._v("go")]),s._v(" v1.18, "),a("code",[s._v("make")]),s._v(", "),a("code",[s._v("git")]),s._v(", and standard build tools such as "),a("code",[s._v("g++")]),s._v(", and build "),a("code",[s._v("cosmovisor")]),s._v(" v1.2.0 from source,\nignoring step 1 below.")])]),s._v(" "),a("p",[s._v("This guide assumes the "),a("code",[s._v("und")]),s._v(" binary is running with "),a("code",[s._v("systemd")]),s._v(" and that the user logging in via SSH is a "),a("code",[s._v("sudoer")]),s._v(". It also\nassumes that the "),a("code",[s._v(".und_mainchain")]),s._v(" home directory is the default "),a("code",[s._v("$HOME/.und_mainchain")]),s._v(".")]),s._v(" "),a("h2",{attrs:{id:"_1-download-install-cosmovisor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-download-install-cosmovisor"}},[s._v("#")]),s._v(" 1. Download & install cosmovisor")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/tmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/tmp\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/cosmos/cosmos-sdk/releases/download/cosmovisor%2Fv1.5.0/cosmovisor-v1.5.0-linux-amd64.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-zxvf")]),s._v(" cosmovisor-v1.5.0-linux-amd64.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" cosmovisor /usr/local/bin/cosmovisor\n")])])]),a("p",[a("strong",[s._v("Note")]),s._v(": Installing using "),a("code",[s._v("go install")]),s._v(" as per the official guide will install "),a("code",[s._v("cosmovisor")]),s._v(" in "),a("code",[s._v("$GOPATH/bin")]),s._v(" (usually\n"),a("code",[s._v("$HOME/go/bin")]),s._v(") not "),a("code",[s._v("/usr/local/bin")]),s._v(".")]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("IMPORTANT")]),s._v(" "),a("p",[s._v("if your "),a("code",[s._v(".und_mainchain")]),s._v(" is located somewhere other than "),a("code",[s._v("$HOME/.und_manichain")]),s._v(", replace all instances in the commands\nbelow with the "),a("strong",[s._v("full, absolute path")]),s._v(" to your "),a("code",[s._v(".und_mainchain")]),s._v(" directory, for example:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("/mnt/mounted_data_volume/path/to/.und_mainchain\n")])])])]),s._v(" "),a("h2",{attrs:{id:"_2-set-up-cosmovisor-dirs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-set-up-cosmovisor-dirs"}},[s._v("#")]),s._v(" 2. Set up cosmovisor dirs")]),s._v(" "),a("InstallUnd",{attrs:{version:"1.5.1",plan:""}}),s._v(" "),a("p",[s._v("Create a "),a("code",[s._v("UND_COSMOVISOR_ENV")]),s._v(" env file for "),a("code",[s._v("systemd")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.und_mainchain/cosmovisor/UND_COSMOVISOR_ENV\n")])])]),a("p",[s._v("Add:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DAEMON_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("und\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DAEMON_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.und_mainchain\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DAEMON_RESTART_AFTER_UPGRADE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n")])])]),a("p",[s._v("Optionally add a value for "),a("code",[s._v("DAEMON_RESTART_DELAY")]),s._v(" (must be in seconds, e.g. "),a("code",[s._v("5s")]),s._v(")")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DAEMON_RESTART_DELAY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("5s\n")])])]),a("p",[s._v("See "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/main/cosmovisor/README.md#command-line-arguments-and-environment-variables",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/cosmos/cosmos-sdk/blob/main/cosmovisor/README.md#command-line-arguments-and-environment-variables"),a("OutboundLink")],1),s._v("\nfor other environment variables.")]),s._v(" "),a("h2",{attrs:{id:"_3-edit-systemd-service-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-edit-systemd-service-file"}},[s._v("#")]),s._v(" 3. Edit systemd service file")]),s._v(" "),a("p",[s._v("Stop the service")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl stop und\n")])])]),a("p",[s._v("Open the service file in a text editor")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/systemd/system/und.service\n")])])]),a("p",[s._v("Add the "),a("code",[s._v("EnvironmentFile")]),s._v(" directive to the "),a("code",[s._v("[Service]")]),s._v(" section, for example:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("EnvironmentFile")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/full/path/to/.und_mainchain/cosmovisor/UND_COSMOVISOR_ENV\n")])])]),a("p",[s._v("Edit the "),a("code",[s._v("ExecStart")]),s._v(" directive, replacing "),a("code",[s._v("/usr/local/bin/und")]),s._v(" with "),a("code",[s._v("/usr/local/bin/cosmovisor run")]),s._v(", for example:")]),s._v(" "),a("p",[s._v("change")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/bin/und start\n")])])]),a("p",[s._v("to:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/bin/cosmovisor run start\n")])])]),a("p",[s._v("If you have installed via "),a("code",[s._v("go install")]),s._v(" or built/installed from source, the path might be\nsomething like "),a("code",[s._v("/home/username/go/bin/cosmovisor")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("Any flags for "),a("code",[s._v("und")]),s._v(" can be passed the same as previously, for example:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/bin/cosmovisor run start "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--home")]),s._v(" /path/to/my/.und_mainchain\n")])])])]),s._v(" "),a("h2",{attrs:{id:"_4-restart-the-und-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-restart-the-und-service"}},[s._v("#")]),s._v(" 4. restart the und service")]),s._v(" "),a("p",[s._v("Reload "),a("code",[s._v("systemd")]),s._v(" and start the "),a("code",[s._v("und")]),s._v(" service")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start und\n")])])]),a("p",[s._v("Check:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" journalctl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" und "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v("\n")])])]),a("p",[s._v("The logs should be prefixed with "),a("code",[s._v("cosmovisor[PID]")])])],1)}),[],!1,null,null,null);a.default=o.exports}}]);