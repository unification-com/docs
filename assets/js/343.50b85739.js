(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{624:function(t,e,s){"use strict";s.r(e);var n=s(14),i=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"und-testnet-init-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#und-testnet-init-files"}},[t._v("#")]),t._v(" und testnet init-files")]),t._v(" "),e("p",[t._v("Initialize config directories & files for a multi-validator testnet running locally via separate processes (e.g. Docker Compose or similar)")]),t._v(" "),e("h3",{attrs:{id:"synopsis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synopsis"}},[t._v("#")]),t._v(" Synopsis")]),t._v(" "),e("p",[t._v('init-files will setup "v" number of directories and populate each with\nnecessary files (private validator, genesis, config, etc.) for running "v" validator nodes.')]),t._v(" "),e("p",[t._v("Booting up a network with these validator folders is intended to be used with Docker Compose,\nor a similar setup where each node has a manually configurable IP address.")]),t._v(" "),e("p",[t._v("Note, strict routability for addresses is turned off in the config file.")]),t._v(" "),e("p",[t._v("Example:\nund testnet init-files --v 4 --output-dir /tmp/fund-testnet --starting-ip-address 192.168.10.2")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("und testnet init-files [flags]\n")])])]),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('      --chain-id string              genesis file chain-id, if left blank will be randomly created\n  -h, --help                         help for init-files\n      --key-type string              Key signing algorithm to generate keys for (default "secp256k1")\n      --keyring-backend string       Select keyring\'s backend (os|file|test) (default "os")\n      --minimum-gas-prices string    Minimum gas prices to accept for transactions; All fees in a tx must meet this minimum (e.g. 0.01photino,0.001stake) (default "0.000006nund")\n      --node-daemon-home string      Home directory of the node\'s daemon configuration (default ".und_mainchain")\n      --node-dir-prefix string       Prefix the directory name for each node with (node results in node0, node1, ...) (default "node")\n  -o, --output-dir string            Directory to store initialization data for the testnet (default "/tmp/fund-testnet")\n      --starting-ip-address string   Starting IP address (192.168.0.1 results in persistent peers list ID0@192.168.0.1:46656, ID1@192.168.0.2:46656, ...) (default "192.168.0.1")\n      --v int                        Number of validators to initialize the testnet with (default 4)\n')])])]),e("h3",{attrs:{id:"see-also"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" SEE ALSO")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_testnet.html"}},[t._v("und testnet")]),t._v("\t - subcommands for starting or configuring local testnets")],1)]),t._v(" "),e("h6",{attrs:{id:"auto-generated-by-spf13-cobra-on-6-may-2025"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-generated-by-spf13-cobra-on-6-may-2025"}},[t._v("#")]),t._v(" Auto generated by spf13/cobra on 6-May-2025")])])}),[],!1,null,null,null);e.default=i.exports}}]);