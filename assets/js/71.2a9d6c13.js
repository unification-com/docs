(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{349:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/systemd/system/und.service\n")])])]),t("p",[s._v("At a minimum, the service configuration should contain the following, replacing "),t("code",[s._v("USERNAME")]),s._v(" and "),t("code",[s._v("FULL_PATH_TO")]),s._v("\nwith your own values:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[Unit]\nDescription=Unification Mainchain Validator Node\n\n[Service]\nUser=USERNAME\nGroup=USERNAME\nWorkingDirectory=/home/USERNAME\nExecStart=/usr/local/bin/und start --home /FULL_PATH_TO/.und_mainchain\nRestart=on-failure\nRestartSec=10s\nLimitNOFILE=4096\n\n[Install]\nWantedBy=default.target\n")])])]),t("p",[s._v("It is entirely possible to create a more sophisticated service definition should you desire.")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("p",[t("strong",[s._v("Also see")]),s._v(": "),t("RouterLink",{attrs:{to:"/mainchain/migrations/cosmovisor.html"}},[s._v("Using Cosmovisor with und: Quick Start")]),s._v(" for details on running "),t("code",[s._v("und")]),s._v(" with\n"),t("code",[s._v("cosmovisor")]),s._v(".")],1)]),s._v(" "),t("p",[s._v("Next, inform "),t("code",[s._v("systemctl")]),s._v(" of the new service:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" und\n")])])]),t("p",[s._v("The service can now be started:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start und\n")])])]),t("p",[s._v("and stopped:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl stop und\n")])])]),t("p",[s._v("in the background.")]),s._v(" "),t("p",[s._v("Finally, you can monitor the log output for the service by running:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" journalctl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" und "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--follow")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);