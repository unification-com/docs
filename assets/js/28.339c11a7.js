(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{309:function(e,t,a){"use strict";a.r(t);var n=a(14),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"aws-101"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aws-101"}},[e._v("#")]),e._v(" AWS 101")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("This guide is in the process of being updated to cover cosmovisor. In the interim, for parts 4.2 up to and including\npart 6, you can follow the "),t("RouterLink",{attrs:{to:"/mainchain/software/cosmovisor/install_und_with_cosmovisor.html"}},[e._v("Install und with Cosmovisor")]),e._v("\nguide, then return here.")],1)]),e._v(" "),t("h4",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#introduction-to-installing-und-on-aws-ec2-instances"}},[e._v("Introduction to installing und on AWS EC2 instances")])]),t("li",[t("a",{attrs:{href:"#part-1-create-an-ssh-key-pair"}},[e._v("Part 1: Create an SSH key pair")])]),t("li",[t("a",{attrs:{href:"#part-2-create-a-vpc-network"}},[e._v("Part 2: Create a VPC (Network)")])]),t("li",[t("a",{attrs:{href:"#part-3-create-and-launch-an-ec2-instance"}},[e._v("Part 3: Create and launch an EC2 instance")])]),t("li",[t("a",{attrs:{href:"#part-4-log-in-and-configure-instance-via-ssh"}},[e._v("Part 4: Log in and configure instance via SSH")]),t("ul",[t("li",[t("a",{attrs:{href:"#part-4-1-install-the-prerequisites"}},[e._v("Part 4.1: Install the prerequisites")])]),t("li",[t("a",{attrs:{href:"#part-4-2-install-the-und-binary"}},[e._v("Part 4.2: Install the und binary")])])])]),t("li",[t("a",{attrs:{href:"#part-5-initialising-your-full-node"}},[e._v("Part 5: Initialising your full node")]),t("ul",[t("li",[t("a",{attrs:{href:"#download-the-latest-genesis-file"}},[e._v("Download the latest Genesis file")])]),t("li",[t("a",{attrs:{href:"#get-seed-nodes"}},[e._v("Get seed nodes")])]),t("li",[t("a",{attrs:{href:"#gas-prices"}},[e._v("Gas Prices")])])])]),t("li",[t("a",{attrs:{href:"#part-6-run-und-as-a-systemd-service"}},[e._v("Part 6: Run und as a systemd service")])]),t("li",[t("a",{attrs:{href:"#part-7-become-a-validator"}},[e._v("Part 7: Become a Validator")])]),t("li",[t("a",{attrs:{href:"#part-8-final-cleanup"}},[e._v("Part 8: Final cleanup")])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"introduction-to-installing-und-on-aws-ec2-instances"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-installing-und-on-aws-ec2-instances"}},[e._v("#")]),e._v(" Introduction to installing "),t("code",[e._v("und")]),e._v(" on AWS EC2 instances")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("If you intend to become a "),t("code",[e._v("MainNet")]),e._v(" Validator, it is recommended that you practice on "),t("code",[e._v("TestNet")]),e._v(" first in\norder to familiarise yourself with the process.")])]),e._v(" "),t("p",[e._v("This guide introduces a "),t("em",[e._v("very simple")]),e._v(' "quick start" single AWS EC2 instance, using a VPC with a single public subnet\nto connect to a Mainchain Public network. Validator node operators are highly encouraged to explore more sophisticated\narchitecture configurations to increase the security, reliability and availability of their Validator node - for\nexample, multi layered network with both private/public subnets, one or more "sentry" full (non-validator) nodes placed\nin front of your main (hidden in a private subnet) Validator node to handle and relay communication from the outside\nworld, and reverse proxy for any RPC access via the sentries etc. in addition to implementing hardware KMS solutions to\nprotect validator private keys.')]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("Important")]),e._v(" "),t("p",[e._v('This guide should not be considered the default, full, out of the box solution for a Validator node, but more an "AWS\n101" guide to familiarise the reader with the core concepts involved in setting up the minimum AWS EC2 instance and\nassociated service requirements in order to operate a Validator node. It should be considered a starting point giving\nyou the initial building blocks from which to build a more sophisticated network/node architecture to support and\nprotect your Validator node.')])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v('any public IPs generated by AWS during this guide are not static - they will change if the EC2 instance is restarted. It\nis recommended that the reader also investigates AWS\'s "elastic IPs" (static IPs) for their public-facing node(s).')])]),e._v(" "),t("p",[e._v("Where the guide prompts users to open a terminal, Windows 10 users should use PowerShell.")]),e._v(" "),t("p",[e._v("This guide assumes the reader already has an AWS account.")]),e._v(" "),t("h2",{attrs:{id:"part-1-create-an-ssh-key-pair"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-1-create-an-ssh-key-pair"}},[e._v("#")]),e._v(" Part 1: Create an SSH key pair")]),e._v(" "),t("p",[e._v("In order to configure your node(s) and install the necessary software, you will be connecting to the instance via SSH.\nSSH connections to an EC2 instance must be authenticated using an SSH Key Pair - password authentication is (and should\nbe) disabled for security.")]),e._v(" "),t("p",[e._v('In the AWS Console, go to the EC2 dashboard and in the left menu, under "Network & Security", click "Key Pairs" followed\nby the "Create Key Pair" button.')]),e._v(" "),t("p",[e._v("Enter a suitable name, for example "),t("code",[e._v("aws-ec2-und-validator-node")]),e._v('. Leave the file format as "pem", and click the "Crete\nkey pair" button.')]),e._v(" "),t("p",[e._v("This will download a private key called "),t("code",[e._v("aws-ec2-und-validator-node.pem")]),e._v(" (or whatever you called it) which will be used\nto log into your EC2 instance via SSH.")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("Do not lose this key - it is used to access your node's EC2 instance via SSH, and there is no way to recover it from the\nAWS console if it's lost. Keep is safe, keep is secure, keep it secret!")])]),e._v(" "),t("p",[e._v("Open a terminal on your local PC, and check if you have a "),t("code",[e._v("$HOME/.ssh")]),e._v(" directory:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-la")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.ssh\n")])])]),t("p",[e._v("If you do not have a "),t("code",[e._v("$HOME/.ssh")]),e._v(" directory, create it:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.ssh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("700")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.ssh\n")])])]),t("p",[e._v("Next, move the downloaded private key into the "),t("code",[e._v("$HOME/.ssh")]),e._v(" directory, and tighten the file's permissions, replacing any\nbold text appropriately:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" /path/to/aws-ec2-und-validator-node.pem "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.ssh\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.ssh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("400")]),e._v(" aws-ec2-und-validator-node.pem\n")])])]),t("h2",{attrs:{id:"part-2-create-a-vpc-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-2-create-a-vpc-network"}},[e._v("#")]),e._v(" Part 2: Create a VPC (Network)")]),e._v(" "),t("p",[e._v("We need to create a network for our node. This will be a simple VPC with a single public subnet. Validator operators are\nencouraged to explore more sophisticated configurations for their production node.")]),e._v(" "),t("p",[e._v('From the Services menu (top-left in the header) in AWS Console, scroll down to "Networking & Content Delivery" and\nclick "VPC", then click the "Launch VPC Wizard" button.')]),e._v(" "),t("ol",[t("li",[e._v('Select the "VPC with a single public subnet" and click "Select"')]),e._v(" "),t("li",[e._v('Leave the defaults and choose a suitable name in the "VPC Name" section.')]),e._v(" "),t("li",[e._v('Choose a more descriptive name for the Subnet, then click the "Create VPC" button.')])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("The names you choose can be anything, but should make the VPC and subnet easily identifiable to you. These names will\nnot be public and only visible to you through the AWS console.")])]),e._v(" "),t("p",[e._v("Next, we need to configure the VPC to automatically assign a public IP to instances in the network.")]),e._v(" "),t("ol",[t("li",[e._v('In the left menu of the VPC Dashboard, click "Subnets".')]),e._v(" "),t("li",[e._v('Select your new subnet from the list, and click the "Actions" dropdown, followed by "Modify auto-assign IP settings".')]),e._v(" "),t("li",[e._v('Tick the "Auto assign IPv4" box, and click "Save".')])]),e._v(" "),t("h2",{attrs:{id:"part-3-create-and-launch-an-ec2-instance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-3-create-and-launch-an-ec2-instance"}},[e._v("#")]),e._v(" Part 3: Create and launch an EC2 instance")]),e._v(" "),t("p",[e._v("The EC2 instance is the Virtual Machine where the node will be installed an run. We'll create and launch a single Linux\ninstance, and connect it to the network created in the previous part.")]),e._v(" "),t("ol",[t("li",[e._v('From the Services menu in AWS Console, click "EC2" under "Compute", followed by the "Launch Instance" button.')]),e._v(" "),t("li",[e._v('In the "Application and OS Images" section, select Ubuntu, then "Ubuntu Server 22.04 LTS (HVM)" from the dropdown.')]),e._v(" "),t("li",[e._v('In the "Choose Instance Type" section, we recommend a '),t("code",[e._v("t2.large")]),e._v(".")]),e._v(" "),t("li",[e._v('In the "Key Pair" section, select the key you created previously.')]),e._v(" "),t("li",[e._v('In the "Network" section, select the VPC created in the previous part. Leave the rest as the defaults, and click\nthe "6. Configure Security Group" tab at the top.')]),e._v(" "),t("li",[e._v('Give the security group a meaningful name and description - for example "und-validator-node". You will be able to\nfind and edit this security group in the AWS EC2 console, under "Network & Security -> Security Groups" once it has\nbeen created.')])]),e._v(" "),t("p",[e._v("Next, we need to configure some firewall rules for the instance. There is already a default rule for SSH (port 22)\naccess, but this needs tightening to restrict SSH access. We also need to add rules for P2P so the node can communicate\nwith other nodes, and RPC so that you can broadcast Txs to your own node.")]),e._v(" "),t("ol",[t("li",[e._v('In the "Source" column, for the SSH rule, click the dropdown that currently says "Custom" and select "My IP". This\nwill ensure only your computer\'s IP can log in via SSH. Keep in mind, you will need to update this value if you do\nnot have a static IP for your PC. This step is important, since the default value of '),t("code",[e._v("0.0.0.0/0")]),e._v(" means that anyone,\nanywhere can attempt to access your EC2 instance via SSH.")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("if your IP changes, you will need to update this value.")])]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[e._v('Add a description, for example "SSH for my PC"')])]),e._v(" "),t("p",[e._v("Next, we need to create a rule for the "),t("code",[e._v("P2P")]),e._v(" port:")]),e._v(" "),t("ol",[t("li",[e._v('Click "Add Rule"')]),e._v(" "),t("li",[e._v('Leave the "type" as "Custom TCP Rule"')]),e._v(" "),t("li",[e._v('Leave the "Protocol" as "TCP')]),e._v(" "),t("li",[e._v("Set the Port Range as "),t("code",[e._v("26656")])]),e._v(" "),t("li",[e._v('Click the drop-down in the Source column and select "Anywhere"')]),e._v(" "),t("li",[e._v('Set the description as something like "UND Node P2P"')])]),e._v(" "),t("p",[e._v("Next, we need to create a rule for the "),t("code",[e._v("RPC")]),e._v(" port:")]),e._v(" "),t("ol",[t("li",[e._v('Click "Add Rule"')]),e._v(" "),t("li",[e._v('Leave the "type" as "Custom TCP Rule"')]),e._v(" "),t("li",[e._v('Leave the "Protocol" as "TCP')]),e._v(" "),t("li",[e._v("Set the Port Range as 26657")]),e._v(" "),t("li",[e._v('Click the drop-down in the Source column and select "My IP" (you want to restrict sending Txs to the node to your own\nIP)')]),e._v(" "),t("li",[e._v('Set the description as something like "UND Node RPC"')])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("port "),t("code",[e._v("26657")]),e._v(" can be closed on your Validator node once you have registered your validator.")])]),e._v(" "),t("p",[t("strong",[e._v("Next")]),e._v(", click on the "),t("strong",[e._v('"4. Add Storage"')]),e._v(" tab.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("As the state DB grows, the disk size requirements will grow. Check in our "),t("a",{attrs:{href:"https://discord.gg/SeB69w5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Discord"),t("OutboundLink")],1),e._v("\nfor the latest values")])]),e._v(" "),t("ol",[t("li",[e._v("Change the size from 10 to "),t("strong",[e._v("100")]),e._v(" Gb.")]),e._v(" "),t("li",[e._v("Optionally, configure disk encryption.")])]),e._v(" "),t("p",[e._v('Click "Review and Launch"')]),e._v(" "),t("p",[e._v('Review the details are correct, then click "Launch". This will prompt you to select a key pair to use on the instance.\nSelect the key you created in Part 1.')]),e._v(" "),t("p",[e._v('Once launched, make a note of the instance ID (top box titled "Your instances are now launching"), click your instance\nID link in the same box. This will take you to the Instances console, with your new instance already highlighted. Click\nthe pencil icon in the "Name" column, and give your instance a name.')]),e._v(" "),t("p",[e._v('Finally, make a note of the "IPv4 Public IP" value for your instance - you will need this to log in via SSH in the next\npart.')]),e._v(" "),t("h2",{attrs:{id:"part-4-log-in-and-configure-instance-via-ssh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-4-log-in-and-configure-instance-via-ssh"}},[e._v("#")]),e._v(" Part 4: Log in and configure instance via SSH")]),e._v(" "),t("p",[e._v("We now need to log in to the EC2 instance, install the prerequisites, then install and configure the UND node software.\nThis will all be done via SSH.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("any text in "),t("code",[e._v("[square_brackets]")]),e._v(" ("),t("em",[e._v("including")]),e._v(" the square brackets) in the following commands should be replaced with your\nown values. For example, "),t("code",[e._v("[aws_private_key]")]),e._v(" should be replaced with the name of the file downloaded\nin "),t("a",{attrs:{href:"#part-1-create-an-ssh-key-pair"}},[e._v("Part 1")]),e._v(", and "),t("code",[e._v("[vm_ip]")]),e._v(" with the public IP address of your EC2 instance.")])]),e._v(" "),t("p",[e._v("The default username for our Ubuntu EC2 instance is "),t("code",[e._v("ubuntu")]),e._v(".")]),e._v(" "),t("p",[e._v("Note for Windows users: Windows 10 should have an SSH client available in the PowerShell terminal. Older Windows\nversions will require "),t("a",{attrs:{href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PuTTY"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("In a terminal on your local PC, run the following:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("ssh -i $HOME/.ssh/[aws_private_key] ubuntu@[vm_ip]\n")])])]),t("p",[e._v("This will log you in to the EC2 instance via SSH.")]),e._v(" "),t("h3",{attrs:{id:"part-4-1-install-the-prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-4-1-install-the-prerequisites"}},[e._v("#")]),e._v(" Part 4.1: Install the prerequisites")]),e._v(" "),t("p",[e._v("Once logged in to the VM via SSH, run:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" update "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v("\n")])])]),t("p",[e._v("Finally, install the following additional software:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" jq "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v("\n")])])]),t("h3",{attrs:{id:"part-4-2-install-the-und-binary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-4-2-install-the-und-binary"}},[e._v("#")]),e._v(" Part 4.2: Install the und binary")]),e._v(" "),t("p",[e._v("The latest pre-compiled binaries are available for download from\n"),t("a",{attrs:{href:"https://github.com/unification-com/mainchain/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/unification-com/mainchain/releases"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("ul",[t("li",[e._v("The "),t("code",[e._v("und")]),e._v(" binary has been compiled for Linux, OSX and Windows.")])]),e._v(" "),t("p",[e._v("Download the latest version of "),t("code",[e._v("und")]),e._v(":")]),e._v(" "),t("tabs",{attrs:{options:{useUrlFragment:!1}}},[t("tab",{attrs:{name:"MainNet"}},[t("h4",{attrs:{id:"mainnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mainnet"}},[e._v("#")]),e._v(" MainNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/unification-com/mainchain/releases/download/v1.7.0/und_v1.7.0_linux_x86_64.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/unification-com/mainchain/releases/download/v1.7.0/checksums.txt\n")])])])]),e._v(" "),t("tab",{attrs:{name:"TestNet"}},[t("h4",{attrs:{id:"testnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testnet"}},[e._v("#")]),e._v(" TestNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/unification-com/mainchain/releases/download/v1.8.2/und_v1.8.2_linux_x86_64.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/unification-com/mainchain/releases/download/v1.8.2/checksums.txt\n")])])])])],1),e._v(" "),t("p",[e._v("Once downloaded, you can verify the SHA256 checksum against those listed in the release's "),t("code",[e._v("checksums.txt")]),e._v(", for example:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("openssl dgst "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sha256")]),e._v(" und_VERSION_DOWNLOADED.tar.gz\n")])])]),t("p",[e._v("should output something like:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SHA256(und_VERSION_DOWNLOADED.tar.gz)= abc123...\n")])])]),t("p",[e._v("Extract them and copy the binaries to a suitable location - preferably a location in your "),t("code",[e._v("$PATH")]),e._v(" environment variable,\nfor example "),t("code",[e._v("/usr/local/bin")]),e._v(".")]),e._v(" "),t("tabs",{attrs:{options:{useUrlFragment:!1}}},[t("tab",{attrs:{name:"MainNet"}},[t("h4",{attrs:{id:"mainnet-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-2"}},[e._v("#")]),e._v(" MainNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-zxvf")]),e._v(" und_v1.7.0_linux_x86_64.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" und /usr/local/bin/und\n")])])])]),e._v(" "),t("tab",{attrs:{name:"TestNet"}},[t("h4",{attrs:{id:"testnet-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testnet-2"}},[e._v("#")]),e._v(" TestNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-zxvf")]),e._v(" und_v1.8.2_linux_x86_64.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" und /usr/local/bin/und\n")])])])])],1),e._v(" "),t("p",[e._v("Once installed, verify:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" und\n")])])]),t("p",[e._v("should output:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("/usr/local/bin/und\n")])])]),t("p",[e._v("and:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("und version "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--log_level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n")])])]),t("p",[e._v("The output should match the latest release version tag.")]),e._v(" "),t("h2",{attrs:{id:"part-5-initialising-your-full-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-5-initialising-your-full-node"}},[e._v("#")]),e._v(" Part 5: Initialising your full node")]),e._v(" "),t("p",[e._v("We'll now initialise and configure the "),t("code",[e._v("und")]),e._v(" node itself. As previously, any text in "),t("code",[e._v("[square_brackets]")]),e._v(" in the\nfollowing commands should be replaced with your own values accordingly. If you are not currently logged in to the EC2\ninstance via SSH, do so.")]),e._v(" "),t("p",[e._v("Once logged in, run:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("und init "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("your_node_tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("p",[t("code",[e._v("[your_node_tag]")]),e._v(" can be any ID you like, but is limited to ASCII characters (alphanumeric characters, hyphens and\nunderscores)")]),e._v(" "),t("h3",{attrs:{id:"download-the-latest-genesis-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#download-the-latest-genesis-file"}},[e._v("#")]),e._v(" Download the latest Genesis file")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("Please ensure you download the correct genesis for the network you would like to join! Remember to change the output\ndirectory in the command below if you are using something other than the default "),t("code",[e._v("$HOME/.und_mainchain")]),e._v(" directory!")])]),e._v(" "),t("p",[e._v("To spin up your new node, download the latest "),t("code",[e._v("genesis.json")]),e._v(" for the network you would like to join:")]),e._v(" "),t("tabs",{attrs:{options:{useUrlFragment:!1}}},[t("tab",{attrs:{name:"MainNet"}},[t("h4",{attrs:{id:"mainnet-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-3"}},[e._v("#")]),e._v(" MainNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://raw.githubusercontent.com/unification-com/mainnet/master/latest/genesis.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.und_mainchain/config/genesis.json\n")])])])]),e._v(" "),t("tab",{attrs:{name:"TestNet"}},[t("h4",{attrs:{id:"testnet-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testnet-3"}},[e._v("#")]),e._v(" TestNet")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://raw.githubusercontent.com/unification-com/testnet/master/latest/genesis.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.und_mainchain/config/genesis.json\n")])])])])],1),e._v(" "),t("p",[e._v("Get the current chain ID from genesis. Make a note of the output, it'll be required in commands later in the guide.\nCommand is all on one line:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("jq --raw-output "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.chain_id'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.und_mainchain/config/genesis.json\n")])])]),t("h3",{attrs:{id:"get-seed-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-seed-nodes"}},[e._v("#")]),e._v(" Get seed nodes")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("Please ensure you get the correct seed node information for the network you would like to join! Remember to change the\ndirectory if you are using something other than the default "),t("code",[e._v("$HOME/.und_mainchain")]),e._v(" directory!\nFor this guide, we are using "),t("code",[e._v("/mnt/disks/data/.und_mainchain")]),e._v(" for the node's home directory.")])]),e._v(" "),t("p",[e._v("Your node will need to know at least one seed node in order to join the network\nand begin P2P communication with other nodes in the network. The latest seed information will always be available at\neach network's respective Github repo:")]),e._v(" "),t("tabs",{attrs:{options:{useUrlFragment:!1}}},[t("tab",{attrs:{name:"MainNet"}},[t("h4",{attrs:{id:"mainnet-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-4"}},[e._v("#")]),e._v(" MainNet")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/unification-com/mainnet/blob/master/latest/seed_nodes.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/unification-com/mainnet/blob/master/latest/seed_nodes.md"),t("OutboundLink")],1)])]),e._v(" "),t("tab",{attrs:{name:"TestNet"}},[t("h4",{attrs:{id:"testnet-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testnet-4"}},[e._v("#")]),e._v(" TestNet")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/unification-com/testnet/blob/master/latest/seed_nodes.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/unification-com/testnet/blob/master/latest/seed_nodes.md"),t("OutboundLink")],1)])])],1),e._v(" "),t("p",[e._v("Go to the repo for the network you are connecting to and copy one or more of the seed nodes (you only need\nthe "),t("code",[e._v("id@address:port")]),e._v(")")]),e._v(" "),t("p",[e._v("Edit your node configuration file using nano:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" /path/to/.und_mainchain/config/config.toml\n")])])]),t("p",[e._v("Hit "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("W")]),e._v(", type "),t("code",[e._v("[p2p]")]),e._v(" (including the square brackets) and hit return - this will take you to\nthe "),t("code",[e._v("[p2p]")]),e._v(" section of the config file, which begins with:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("##### peer to peer configuration options #####\n[p2p]\n")])])]),t("p",[e._v("Find the "),t("code",[e._v('seeds = ""')]),e._v(" variable about 12 lines below, and add the seed node information between the double quotes (comma\nseparated, no spaces if more than one). For example:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("seeds")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node_id@ip:port"')]),e._v("\n")])])]),t("p",[e._v("Next, hit "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("W")]),e._v(", type "),t("code",[e._v("[rpc]")]),e._v(" (including the square brackets) and hit return - this will take you\nto the "),t("code",[e._v("[rpc]")]),e._v(" section of the config file, which begins with:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##### rpc server configuration options #####")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("rpc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("p",[e._v("About 3 lines under this, find:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("laddr")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tcp://127.0.0.1:26657"')]),e._v("\n")])])]),t("p",[e._v("Change the value to:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("laddr")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tcp://0.0.0.0:26657"')]),e._v("\n")])])]),t("p",[e._v("Hit "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("X")]),e._v(" followed by "),t("code",[e._v("y")]),e._v(" and then return to save the file and exit nano.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("you should revert the [rpc] configuration for port 26657 to:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("laddr")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tcp://127.0.0.1:26657"')]),e._v("\n")])])]),t("p",[e._v("once you have run the "),t("code",[e._v("create-validator")]),e._v(" command below. See "),t("a",{attrs:{href:"#part-8-final-cleanup"}},[e._v("Part 8: Final cleanup")]),e._v(" for further\ndetails.")])]),e._v(" "),t("h3",{attrs:{id:"gas-prices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gas-prices"}},[e._v("#")]),e._v(" Gas Prices")]),e._v(" "),t("p",[e._v("It is good practice to set the minimum-gas-prices value in "),t("code",[e._v("$HOME/.und_mainchain/config/app.toml")]),e._v(", in order to protect\nyour full node from spam transactions. This should be set as a decimal value in "),t("code",[e._v("nund")]),e._v(", and the recommended value is\ncurrently "),t("code",[e._v("25.0nund")]),e._v(". This means your node will ignore any Txs with a gas price below this value. To do so, open\nup "),t("code",[e._v("$HOME/.und_mainchain/config/app.toml")]),e._v(" in a text editor, and set "),t("code",[e._v("minimum-gas-prices")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.und_mainchain/config/app.toml\n")])])]),t("p",[e._v("Change:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("minimum-gas-prices")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n")])])]),t("p",[e._v("To, for example:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("minimum-gas-prices")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25.0nund"')]),e._v("\n")])])]),t("p",[e._v("Hit "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("X")]),e._v(" followed by "),t("code",[e._v("y")]),e._v(" and then return to save the file and exit nano.")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("keep your "),t("code",[e._v("$HOME/.und_mainchain/config/node_key.json")]),e._v(" and "),t("code",[e._v("$HOME/.und_mainchain/config/priv_validator_key.json")]),e._v(" files\nsafe! These are required for your node to propose and sign blocks. If you ever migrate your node to a different host/VM\ninstance, you will need these.")])]),e._v(" "),t("h2",{attrs:{id:"part-6-run-und-as-a-systemd-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-6-run-und-as-a-systemd-service"}},[e._v("#")]),e._v(" Part 6: Run und as a systemd service")]),e._v(" "),t("p",[e._v("Once you have initialised and tested the "),t("code",[e._v("und")]),e._v(" node, it can be set up as a background daemon on the server\nusing "),t("code",[e._v("systemctl")]),e._v(". This means that you can easily start/stop/restart the service, and do not need to leave the SSH\nsession open while "),t("code",[e._v("und")]),e._v(" is running.")]),e._v(" "),t("p",[e._v("If you're not logged in to your EC2 instance via SSH, log in. If you are still logged in, and have not stopped the "),t("code",[e._v("und")]),e._v("\nnode, hit "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("C")]),e._v(" to stop the node.")]),e._v(" "),t("p",[e._v("We need to use the nano text editor to create the service configuration. Run:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" /etc/systemd/system/und.service\n")])])]),t("p",[e._v("At a minimum, the service configuration should contain the following, replacing "),t("code",[e._v("USERNAME")]),e._v(" and "),t("code",[e._v("FULL_PATH_TO")]),e._v("\nwith your own values:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Unit]\nDescription=Unification Mainchain Validator Node\n\n[Service]\nUser=USERNAME\nGroup=USERNAME\nWorkingDirectory=/home/USERNAME\nExecStart=/usr/local/bin/und start --home /FULL_PATH_TO/.und_mainchain\nRestart=on-failure\nRestartSec=10s\nLimitNOFILE=4096\n\n[Install]\nWantedBy=default.target\n")])])]),t("p",[e._v("It is entirely possible to create a more sophisticated service definition should you desire.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[t("strong",[e._v("Also see")]),e._v(": "),t("RouterLink",{attrs:{to:"/mainchain/migrations/cosmovisor.html"}},[e._v("Using Cosmovisor with und: Quick Start")]),e._v(" for details on running "),t("code",[e._v("und")]),e._v(" with\n"),t("code",[e._v("cosmovisor")]),e._v(".")],1)]),e._v(" "),t("p",[e._v("Next, inform "),t("code",[e._v("systemctl")]),e._v(" of the new service:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" und\n")])])]),t("p",[e._v("The service can now be started:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start und\n")])])]),t("p",[e._v("and stopped:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl stop und\n")])])]),t("p",[e._v("in the background.")]),e._v(" "),t("p",[e._v("Finally, you can monitor the log output for the service by running:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" journalctl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-u")]),e._v(" und "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--follow")]),e._v("\n")])])]),t("p",[e._v("and use "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("C")]),e._v(" to exit the journalctl command. You can now log out of your SSH session and und\nwill continue running in the background.")]),e._v(" "),t("h2",{attrs:{id:"part-7-become-a-validator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-7-become-a-validator"}},[e._v("#")]),e._v(" Part 7: Become a Validator")]),e._v(" "),t("p",[e._v("Important: ensure your node has fully synced with the network before continuing.\nIf not already logged in, log in to your EC2 instance via SSH, and run:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" journalctl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-u")]),e._v(" und "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--follow")]),e._v("\n")])])]),t("p",[e._v("Once fully synced (check the downloaded height against the current clock in the block explorer), hit "),t("kbd",[e._v("Ctrl")]),e._v("\n+"),t("kbd",[e._v("C")]),e._v(" to quit "),t("code",[e._v("journalctl")]),e._v(" ( "),t("code",[e._v("und")]),e._v(" will continue to run in the background).")]),e._v(" "),t("p",[e._v("You will need your Validator node's Tendermint public key in order to register it on the Mainchain network as a\nvalidator. Whilst still in the SSH session, run:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("und tendermint show-validator\n")])])]),t("p",[e._v("Make a note of the output, as you will need this in later commands, where it will be referred to\nas "),t("code",[e._v("[you_validator_public_key]")]),e._v(".")]),e._v(" "),t("p",[e._v("You can now exit the SSH session - the rest of the commands will be run in a terminal on your local PC.")]),e._v(" "),t("p",[e._v("Go\nto "),t("a",{attrs:{href:"https://github.com/unification-com/mainchain/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/unification-com/mainchain/releases/latest"),t("OutboundLink")],1),e._v("\nand download the latest "),t("code",[e._v("und")]),e._v(" archive for your OS - for example, "),t("code",[e._v("und_v1.5.1_windows_x86_64.tar.gz")]),e._v(".")]),e._v(" "),t("p",[e._v("Open a terminal/PowerShell, and "),t("code",[e._v("cd")]),e._v(" into the directory where you extracted the "),t("code",[e._v("und")]),e._v(" executable:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" path/to/extracted/und_directory\n")])])]),t("p",[e._v("As previously, any text in "),t("code",[e._v("[square_brackets]")]),e._v(" in the following commands should be replaced with your own values\naccordingly.")]),e._v(" "),t("p",[e._v("If you do not already have a wallet/account, you can create one (on your local PC, not in the SSH session) by running:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./und keys "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" account_name\n")])])]),t("p",[e._v("If you already have a wallet, you can import the account by running:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./und keys "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" account_name "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--recover")]),e._v("\n")])])]),t("p",[e._v("in which case, you will be prompted for the mnemonic and a password to secure the wallet.")]),e._v(" "),t("p",[e._v('From here, it is assumed the reader has an account with sufficient FUND from which to self-delegate and create their\nValidator node. The account you use to self-delegate will become the "owner" account of the Validator node.')]),e._v(" "),t("p",[e._v("On your local PC, run the following command, replacing any text in "),t("code",[e._v("[square_brackets]")]),e._v(" accordingly with your own values:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('./und tx staking create-validator \\\n--amount=[stake_in_nund] \\\n--pubkey=[your_validator_public_key] \\\n--moniker="[your_ev_moniker]" \\\n--website="[your_website]" \\\n--details="[description]" \\\n--security-contact="[security_email]" \\\n--chain-id=[chain_id] \\\n--commission-rate="[0.10]" \\\n--commission-max-rate="[0.20]" \\\n--commission-max-change-rate="[0.01]" \\\n--min-self-delegation="1" \\\n--gas="auto" \\\n--gas-prices="25.0nund" \\\n--gas-adjustment=1.5 \\\n--from=account_name \\\n--node=tcp://[vm_ip]:26657\n')])])]),t("p",[t("code",[e._v("[stake_in_nund]")]),e._v(" = (required) the amount of FUND in "),t("code",[e._v("nund")]),e._v(" you are self-delegating. You can use\nthe "),t("code",[e._v("und convert 1000 fund nund")]),e._v(" command to convert FUND to nund. E.g. "),t("code",[e._v("1000000000000nund")]),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("do not enter more nund than you have in your wallet and ensure you have enough left over to pay for this and future Tx\nfees!")])]),e._v(" "),t("p",[t("code",[e._v("[your_validator_public_key]")]),e._v(" = (required) the public key output from the previous und tendermint show-validator\ncommand.")]),e._v(" "),t("p",[t("code",[e._v("[your_ev_moniker]")]),e._v(" = (required) a publicly visible ID/tag for your Validator node.")]),e._v(" "),t("p",[t("code",[e._v("[your_website]")]),e._v(" = (optional) website promoting your node")]),e._v(" "),t("p",[t("code",[e._v("[description]")]),e._v(" = (optional) short description of your node")]),e._v(" "),t("p",[t("code",[e._v("[security_email]")]),e._v(" = (optional) security contact for your organisation")]),e._v(" "),t("p",[t("code",[e._v("[chain_id]")]),e._v(" = the network (e.g. "),t("code",[e._v("FUND-TestNet-2")]),e._v(", or "),t("code",[e._v("FUND-MainNet-2")]),e._v(") you are creating a\nvalidator on - this was obtained earlier in the guide via the "),t("code",[e._v("jq")]),e._v(" command")]),e._v(" "),t("p",[t("code",[e._v("[account_name]")]),e._v(" = the account self-delegating the FUND, previously created/imported with the "),t("code",[e._v("und keys add")]),e._v(" command")]),e._v(" "),t("p",[t("code",[e._v("[vm_ip]")]),e._v(" = the IP address of your EC2 instance running the full node - you can get this from your AWS EC2 Instances\nconsole.")]),e._v(" "),t("h4",{attrs:{id:"commission-rates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commission-rates"}},[e._v("#")]),e._v(" Commission Rates")]),e._v(" "),t("p",[e._v("Your commission rates can be set using the "),t("code",[e._v("--commission-rate")]),e._v("\n, "),t("code",[e._v("--commission-max-change-rate and")]),e._v(" "),t("code",[e._v("--commission-max-rate")]),e._v(" flags.")]),e._v(" "),t("p",[t("code",[e._v("--commission-rate")]),e._v(": The % commission you will earn from delegators' rewards. Keeping this low can attract more\ndelegators to your node.")]),e._v(" "),t("p",[t("code",[e._v("--commission-max-rate")]),e._v(": The maximum you will ever increase your commission rate to - you cannot raise commission above\nthis value. Again, keeping this low can attract more delegators.")]),e._v(" "),t("p",[t("code",[e._v("--commission-max-change-rate")]),e._v(": The maximum you can increase the commission-rate by per day. For example, if your\nmaximum change rate is 0.01, you can only make changes in 0.01 increments, so from 0.10 (10%) to 0.11 (11%).")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("The values for "),t("code",[e._v("--commission-max-change-rate")]),e._v(" and "),t("code",[e._v("--commission-max-rate")]),e._v(" flags cannot be changed after the\ncreate-validator command has been run.")])]),e._v(" "),t("p",[e._v("Finally, the "),t("code",[e._v("--min-self-delegation")]),e._v(" flag is the minimum amount of "),t("code",[e._v("nund")]),e._v(" you are required to keep self-delegated to\nyour validtor, meaning you must always have at least this amount self-delegated to your node.")]),e._v(" "),t("p",[e._v("For example:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./und tx staking create-validator "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--amount")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("1000000000000nund "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--pubkey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("undvalconspub1zcjduepq6yq7drzefkavsrxhxk69cy63tj3r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--moniker")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"MyAwesomeNode"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--website")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://my-node-site.com"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--details")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My node is awesome"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--security-contact"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"security@my-node-site.com"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--chain-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("FUND-TestNet-2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--commission-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.05"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--commission-max-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.10"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--commission-max-change-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.01"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--min-self-delegation"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"auto"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--gas-prices"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25.0nund"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--gas-adjustment"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.5")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--from")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("my_new_wallet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--node")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("tcp://33.44.55.66:26657\n")])])]),t("p",[e._v("Your validator node should now be registered and contributing to the network. To verify, on you local PC, run the\nfollowing:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./und query staking validator "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("und keys show "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("account_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--bech")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("val "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-a")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--chain-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("chain_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--node")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("tcp://"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("vm_ip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(":26657\n")])])]),t("p",[e._v("Replacing "),t("code",[e._v("[account_name]")]),e._v(", "),t("code",[e._v("[chain_id]")]),e._v(" and "),t("code",[e._v("[vm_ip]")]),e._v(" accordingly. Assuming you are going through this guide\non "),t("code",[e._v("TestNet")]),e._v(", you should also see your node listed\nin "),t("a",{attrs:{href:"https://explorer-testnet.unification.io/validators",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://explorer-testnet.unification.io/validators"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"part-8-final-cleanup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#part-8-final-cleanup"}},[e._v("#")]),e._v(" Part 8: Final cleanup")]),e._v(" "),t("p",[e._v("Finally, it's a good idea to close the "),t("strong",[e._v("RPC")]),e._v(" port ("),t("code",[e._v("26657")]),e._v(") on your validator node, leaving only the "),t("strong",[e._v("P2P")]),e._v("\nport ("),t("code",[e._v("26656")]),e._v(") open so that it can communicate with other nodes. This can be done by deleting the firewall rule for the\nRPC port, and by reverting the RPC "),t("code",[e._v("laddr")]),e._v(" configuration value in "),t("code",[e._v("config.toml")]),e._v(" to the "),t("code",[e._v("127.0.0.1")]),e._v(" IP address (which\nwill restrict the node's RPC access to "),t("code",[e._v("localhost")]),e._v(").")]),e._v(" "),t("p",[e._v("Further interaction with the network can be done by spinning up a separate non-validator full node (on your local PC for\nexample), and broadcasting transactions via that node instead.")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("Important")]),e._v(" "),t("p",[e._v("Do not alter the "),t("code",[e._v("P2P")]),e._v(" port ("),t("code",[e._v("26656")]),e._v(") firewall rules. If you do, your validator node will not be able to communicate\nwith its peers.")])]),e._v(" "),t("p",[e._v("That's it - you should now have a full Validator node up and running on a very basic AWS EC2 instance. Once again -\nValidator node operators are highly encouraged to explore more sophisticated architecture configurations to increase the\nsecurity, reliability and availability of their Validator node.")])],1)}),[],!1,null,null,null);t.default=s.exports}}]);