(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{337:function(t,e,a){"use strict";a.r(e);var n=a(14),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"run-a-full-node-join-a-public-network"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node-join-a-public-network"}},[t._v("#")]),t._v(" Run a Full Node & Join a Public Network")]),t._v(" "),e("p",[t._v("Once you have "),e("RouterLink",{attrs:{to:"/mainchain/software/cosmovisor/install_und_with_cosmovisor.html"}},[t._v("installed")]),t._v(" the required software, you can run a full node, join one of the\npublic networks (TestNet or MainNet) and try out "),e("RouterLink",{attrs:{to:"/mainchain/networks/become-validator.html"}},[t._v("becoming a validator")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("IMPORTANT")]),t._v(" "),e("p",[t._v("Whenever you use "),e("code",[t._v("und")]),t._v(" to send Txs or query the chain ensure you pass the correct data to the"),e("br"),t._v(" "),e("code",[t._v("--chain-id")]),t._v(" and if necessary "),e("code",[t._v("--node")]),t._v(" flags so that you connect to the correct network!")])]),t._v(" "),e("h4",{attrs:{id:"contents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#prerequisites"}},[t._v("Prerequisites")])]),e("li",[e("a",{attrs:{href:"#initialising-a-new-node"}},[t._v("Initialising a New Node")])]),e("li",[e("a",{attrs:{href:"#genesis"}},[t._v("Genesis")]),e("ul",[e("li",[e("a",{attrs:{href:"#download-the-latest-genesis"}},[t._v("Download the latest Genesis")])]),e("li",[e("a",{attrs:{href:"#get-the-current-chain-id"}},[t._v("Get the current Chain ID")])])])]),e("li",[e("a",{attrs:{href:"#seed-node-peers"}},[t._v("Seed Node Peers")])]),e("li",[e("a",{attrs:{href:"#minimum-gas"}},[t._v("Minimum Gas")])]),e("li",[e("a",{attrs:{href:"#running-your-node"}},[t._v("Running your node")]),e("ul",[e("li",[e("a",{attrs:{href:"#full-sync"}},[t._v("Full Sync")])]),e("li",[e("a",{attrs:{href:"#using-statesync-snapshots"}},[t._v("Using statesync Snapshots")])]),e("li",[e("a",{attrs:{href:"#checkin-the-node-s-status"}},[t._v("Checkin the node's status")])])])]),e("li",[e("a",{attrs:{href:"#block-explorer"}},[t._v("Block Explorer")])]),e("li",[e("a",{attrs:{href:"#testnet-faucet"}},[t._v("TestNet Faucet")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),e("p",[t._v("Before continuing, ensure you have gone through the following docs:")]),t._v(" "),e("ol",[e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/cosmovisor/install_und_with_cosmovisor.html"}},[t._v("Install und & Cosmovisor")])],1)]),t._v(" "),e("h2",{attrs:{id:"initialising-a-new-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initialising-a-new-node"}},[t._v("#")]),t._v(" Initialising a New Node")]),t._v(" "),e("p",[t._v("Once installed, you will need to initialise your node:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und init "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("your_node_moniker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[e("code",[t._v("[your_node_moniker]")]),t._v(" can be any identifier you like, but are limited to ASCII characters. For example:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und init MyAwesomeNode\n")])])]),e("p",[t._v("Once initialised, you can edit your configuration in "),e("code",[t._v("$HOME/.und_mainchain/config/config.toml")]),t._v(" and in\n"),e("code",[t._v("$HOME/.und_mainchain/config/app.toml")]),t._v(". See "),e("RouterLink",{attrs:{to:"/mainchain/software/und-mainchain-config-ref.html"}},[t._v("configuration reference")]),t._v("\nfor more details on the config file.")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("the default directory used by "),e("code",[t._v("und")]),t._v(" is "),e("code",[t._v("$HOME/.und_mainchain")]),t._v(". This can be changed by passing the global "),e("code",[t._v("--home")]),t._v("\nflag to the "),e("code",[t._v("und")]),t._v(" command, for example "),e("code",[t._v("und start --home $HOME/.und_mainchain_TestNet")]),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"genesis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#genesis"}},[t._v("#")]),t._v(" Genesis")]),t._v(" "),e("p",[t._v("The latest genesis for each network can always be found in their respective Github repos:")]),t._v(" "),e("tabs",{attrs:{options:{useUrlFragment:!1}}},[e("tab",{attrs:{name:"MainNet"}},[e("h4",{attrs:{id:"mainnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mainnet"}},[t._v("#")]),t._v(" MainNet")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/unification-com/mainnet/latest",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unification-com/mainnet/latest"),e("OutboundLink")],1)])]),t._v(" "),e("tab",{attrs:{name:"TestNet"}},[e("h4",{attrs:{id:"testnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testnet"}},[t._v("#")]),t._v(" TestNet")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/unification-com/testnet/latest",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unification-com/testnet/latest"),e("OutboundLink")],1)])])],1),t._v(" "),e("h3",{attrs:{id:"download-the-latest-genesis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-the-latest-genesis"}},[t._v("#")]),t._v(" Download the latest Genesis")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("IMPORTANT")]),t._v(" "),e("p",[t._v("Please ensure you download the correct genesis for the network you would like to join! Remember to change the output\ndirectory in the command below if you are using something other than the default "),e("code",[t._v("$HOME/.und_mainchain")]),t._v(" directory!")])]),t._v(" "),e("p",[t._v("To spin up your new node, download the latest "),e("code",[t._v("genesis.json")]),t._v(" for the network you would like to join:")]),t._v(" "),e("tabs",{attrs:{options:{useUrlFragment:!1}}},[e("tab",{attrs:{name:"MainNet"}},[e("h4",{attrs:{id:"mainnet-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-2"}},[t._v("#")]),t._v(" MainNet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://raw.githubusercontent.com/unification-com/mainnet/master/latest/genesis.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.und_mainchain/config/genesis.json\n")])])])]),t._v(" "),e("tab",{attrs:{name:"TestNet"}},[e("h4",{attrs:{id:"testnet-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testnet-2"}},[t._v("#")]),t._v(" TestNet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://raw.githubusercontent.com/unification-com/testnet/master/latest/genesis.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.und_mainchain/config/genesis.json\n")])])])])],1),t._v(" "),e("h3",{attrs:{id:"get-the-current-chain-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-the-current-chain-id"}},[t._v("#")]),t._v(" Get the current Chain ID")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("You'll need "),e("code",[t._v("jq")]),t._v(" installed to run the command below. Use your package manager to install, for example\n"),e("code",[t._v("sudo apt install jq")]),t._v(" on Debian based systems, and "),e("code",[t._v("sudo yum install jq")]),t._v(" on CentOS/RedHat systems.")])]),t._v(" "),e("p",[t._v("The Chain ID will need to be passed to all "),e("code",[t._v("und")]),t._v(" commands via the "),e("code",[t._v("--chain-id")]),t._v(" flag. The current Chain ID for the\nnetwork your node is connecting to can easily be found by running:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("jq --raw-output "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.chain_id'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.und_mainchain/config/genesis.json\n")])])]),e("p",[t._v("This will output, for example:")]),t._v(" "),e("tabs",{attrs:{options:{useUrlFragment:!1}}},[e("tab",{attrs:{name:"MainNet"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("FUND-MainNet-2\n")])])])]),t._v(" "),e("tab",{attrs:{name:"TestNet"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("FUND-TestNet-2\n")])])])])],1),t._v(" "),e("p",[t._v("which can then be passed to your "),e("code",[t._v("und")]),t._v(" commands:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und query tx FCDFE69F20431B23CF16CAA68C10325EB2E1126FCDF8AD4010CCE927A0808740 --chain-id FUND-TestNet-2\n")])])]),e("h2",{attrs:{id:"seed-node-peers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#seed-node-peers"}},[t._v("#")]),t._v(" Seed Node Peers")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("IMPORTANT")]),t._v(" "),e("p",[t._v("Please ensure you get the correct seed node information for the network you would like to join! Remember to change the\ndirectory if you are using something other than the default "),e("code",[t._v("$HOME/.und_mainchain")]),t._v(" directory!\nFor this guide, we are using "),e("code",[t._v("/mnt/disks/data/.und_mainchain")]),t._v(" for the node's home directory.")])]),t._v(" "),e("p",[t._v("Your node will need to know at least one seed node in order to join the network\nand begin P2P communication with other nodes in the network. The latest seed information will always be available at\neach network's respective Github repo:")]),t._v(" "),e("tabs",{attrs:{options:{useUrlFragment:!1}}},[e("tab",{attrs:{name:"MainNet"}},[e("h4",{attrs:{id:"mainnet-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-3"}},[t._v("#")]),t._v(" MainNet")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/unification-com/mainnet/blob/master/latest/seed_nodes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unification-com/mainnet/blob/master/latest/seed_nodes.md"),e("OutboundLink")],1)])]),t._v(" "),e("tab",{attrs:{name:"TestNet"}},[e("h4",{attrs:{id:"testnet-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testnet-3"}},[t._v("#")]),t._v(" TestNet")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/unification-com/testnet/blob/master/latest/seed_nodes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unification-com/testnet/blob/master/latest/seed_nodes.md"),e("OutboundLink")],1)])])],1),t._v(" "),e("p",[t._v("Go to the repo for the network you are connecting to and copy one or more of the seed nodes (you only need\nthe "),e("code",[t._v("id@address:port")]),t._v(")")]),t._v(" "),e("p",[t._v("Edit your node configuration file using nano:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /path/to/.und_mainchain/config/config.toml\n")])])]),e("p",[t._v("Hit "),e("kbd",[t._v("Ctrl")]),t._v("+"),e("kbd",[t._v("W")]),t._v(", type "),e("code",[t._v("[p2p]")]),t._v(" (including the square brackets) and hit return - this will take you to\nthe "),e("code",[t._v("[p2p]")]),t._v(" section of the config file, which begins with:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("##### peer to peer configuration options #####\n[p2p]\n")])])]),e("p",[t._v("Find the "),e("code",[t._v('seeds = ""')]),t._v(" variable about 12 lines below, and add the seed node information between the double quotes (comma\nseparated, no spaces if more than one). For example:")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("seeds")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_id@ip:port"')]),t._v("\n")])])]),e("h2",{attrs:{id:"minimum-gas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minimum-gas"}},[t._v("#")]),t._v(" Minimum Gas")]),t._v(" "),e("p",[t._v("It is good practice to set the minimum-gas-prices value in "),e("code",[t._v("$HOME/.und_mainchain/config/app.toml")]),t._v(", in order to protect\nyour full node from spam transactions. This should be set as a decimal value in "),e("code",[t._v("nund")]),t._v(", and the recommended value is\ncurrently "),e("code",[t._v("25.0nund")]),t._v(". This means your node will ignore any Txs with a gas price below this value. To do so, open\nup "),e("code",[t._v("$HOME/.und_mainchain/config/app.toml")]),t._v(" in a text editor, and set "),e("code",[t._v("minimum-gas-prices")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.und_mainchain/config/app.toml\n")])])]),e("p",[t._v("Change:")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("minimum-gas-prices")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),e("p",[t._v("To, for example:")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("minimum-gas-prices")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25.0nund"')]),t._v("\n")])])]),e("p",[t._v("Hit "),e("kbd",[t._v("Ctrl")]),t._v("+"),e("kbd",[t._v("X")]),t._v(" followed by "),e("code",[t._v("y")]),t._v(" and then return to save the file and exit nano.")]),t._v(" "),e("h2",{attrs:{id:"running-your-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-your-node"}},[t._v("#")]),t._v(" Running your node")]),t._v(" "),e("p",[t._v("Now that you have "),e("code",[t._v("genesis")]),t._v(", and some seed nodes, you can run your full node. There are two methods currently for\nsyncing your node: full sync, and "),e("code",[t._v("statesync")]),t._v(" from a snapshot.")]),t._v(" "),e("h3",{attrs:{id:"full-sync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-sync"}},[t._v("#")]),t._v(" Full Sync")]),t._v(" "),e("p",[t._v("A full sync will sync the entire chain from genesis to the current block. This is simple, but may take several hours\nor even days depending on the size of the chain since it replays every block. To begin a full sync, simply start\nthe node:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und start\n")])])]),e("p",[t._v("You should see that your node connects to some peers, and after a few seconds begins syncing with the network.")]),t._v(" "),e("h3",{attrs:{id:"using-statesync-snapshots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-statesync-snapshots"}},[t._v("#")]),t._v(" Using "),e("code",[t._v("statesync")]),t._v(" Snapshots")]),t._v(" "),e("h3",{attrs:{id:"checkin-the-node-s-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checkin-the-node-s-status"}},[t._v("#")]),t._v(" Checkin the node's status")]),t._v(" "),e("p",[t._v("Running:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und status\n")])])]),e("p",[t._v("in a separate terminal should output show that the node is running and connected to your chosen network.")]),t._v(" "),e("p",[t._v("By default, any transactions you send via the "),e("code",[t._v("und")]),t._v(" command will be\nsent via your local node (which was started using the "),e("code",[t._v("und start")]),t._v(" command, and whose RPC is on "),e("code",[t._v("tcp://localhost:26656")]),t._v("\nand only open to "),e("code",[t._v("localhost")]),t._v(").")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("You can use the "),e("code",[t._v("--node")]),t._v(" flag with the "),e("code",[t._v("und")]),t._v(" command to have it send to a different node instead. Default client values\nfor "),e("code",[t._v("und")]),t._v(" can also be set in "),e("code",[t._v("$HOME/.und_mainchain/config/client.toml")])])]),t._v(" "),e("h2",{attrs:{id:"block-explorer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#block-explorer"}},[t._v("#")]),t._v(" Block Explorer")]),t._v(" "),e("p",[t._v("Our public block explorers can be found at:")]),t._v(" "),e("tabs",{attrs:{options:{useUrlFragment:!1}}},[e("tab",{attrs:{name:"MainNet"}},[e("h4",{attrs:{id:"mainnet-https-explorer-unification-io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mainnet-https-explorer-unification-io"}},[t._v("#")]),t._v(" MainNet: "),e("a",{attrs:{href:"https://explorer.unification.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://explorer.unification.io"),e("OutboundLink")],1)])]),t._v(" "),e("tab",{attrs:{name:"TestNet"}},[e("h4",{attrs:{id:"testnet-https-explorer-testnet-unification-io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testnet-https-explorer-testnet-unification-io"}},[t._v("#")]),t._v(" TestNet: "),e("a",{attrs:{href:"https://explorer-testnet.unification.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://explorer-testnet.unification.io"),e("OutboundLink")],1)])])],1),t._v(" "),e("h2",{attrs:{id:"testnet-faucet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testnet-faucet"}},[t._v("#")]),t._v(" TestNet Faucet")]),t._v(" "),e("p",[t._v("Our public TestNet has a faucet which can be used to obtain Test FUND for\nuse "),e("strong",[t._v("exclusively on the TestNet network")]),t._v(". You will need an "),e("RouterLink",{attrs:{to:"/mainchain/networks/accounts-wallets.html"}},[t._v("account")]),t._v(" and its associated address\nin order to be able to claim Test FUND.")],1),t._v(" "),e("p",[t._v("See "),e("a",{attrs:{href:"https://faucet-testnet.unification.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://faucet-testnet.unification.io"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"next"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[t._v("#")]),t._v(" Next")]),t._v(" "),e("p",[t._v("Creating and importing "),e("RouterLink",{attrs:{to:"/mainchain/networks/accounts-wallets.html"}},[t._v("accounts and wallets")]),t._v(", "),e("RouterLink",{attrs:{to:"/mainchain/networks/examples/transactions.html"}},[t._v("sending transactions")]),t._v("\nand "),e("RouterLink",{attrs:{to:"/mainchain/networks/become-validator.html"}},[t._v("becoming a Validator")])],1)],1)}),[],!1,null,null,null);e.default=s.exports}}]);