(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{335:function(e,t,a){"use strict";a.r(t);var n=a(14),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_3-node-docker-devnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-node-docker-devnet"}},[e._v("#")]),e._v(" 3-Node Docker DevNet")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("Whenever you use "),t("code",[e._v("und")]),e._v(" to send Txs or query the chain ensure you pass the correct data to the "),t("code",[e._v("--chain-id")]),e._v("\nand if necessary "),t("code",[e._v("--node=")]),e._v(" flags so that you connect to the correct network!")])]),e._v(" "),t("p",[e._v("The repository contains a ready to deploy Docker composition for local development and testing. The Docker composition\nwill spin up a DevNet using the current checked out branch's code to build and run the "),t("code",[e._v("und")]),e._v(" binaries.")]),e._v(" "),t("h4",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#getting-devnet"}},[e._v("Getting DevNet")])]),t("li",[t("a",{attrs:{href:"#spinning-up-devnet"}},[e._v("Spinning up DevNet")])]),t("li",[t("a",{attrs:{href:"#devnet-chain-id"}},[e._v("DevNet Chain ID")])]),t("li",[t("a",{attrs:{href:"#devnet-rpc-nodes"}},[e._v("DevNet RPC Nodes")])]),t("li",[t("a",{attrs:{href:"#devnet-docker-containers"}},[e._v("DevNet Docker containers")])]),t("li",[t("a",{attrs:{href:"#devnet-test-accounts-wallets-and-keys"}},[e._v("DevNet test accounts, wallets and keys")]),t("ul",[t("li",[t("a",{attrs:{href:"#importing-the-devnet-keys"}},[e._v("Importing the DevNet keys")])]),t("li",[t("a",{attrs:{href:"#useful-devnet-defaults-for-und"}},[e._v("Useful DevNet Defaults for und")])]),t("li",[t("a",{attrs:{href:"#rest-api-endpoints"}},[e._v("REST API Endpoints")])])])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"getting-devnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-devnet"}},[e._v("#")]),e._v(" Getting DevNet")]),e._v(" "),t("p",[e._v("Check out the "),t("code",[e._v("mainchain")]),e._v(" repository:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/unification-com/mainchain\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" mainchain\n")])])]),t("h2",{attrs:{id:"spinning-up-devnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spinning-up-devnet"}},[e._v("#")]),e._v(" Spinning up DevNet")]),e._v(" "),t("p",[e._v("DevNet can be started by using the "),t("code",[e._v("make")]),e._v(" target:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" devnet\n")])])]),t("p",[e._v("To bring DevNet down cleanly, use "),t("kbd",[e._v("Ctrl")]),e._v("+"),t("kbd",[e._v("C")]),e._v(", followed by:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" devnet-down\n")])])]),t("h2",{attrs:{id:"devnet-chain-id"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devnet-chain-id"}},[e._v("#")]),e._v(" DevNet Chain ID")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),t("p",[e._v("DevNet's Chain ID is "),t("code",[e._v("FUND-DevNet-2")]),e._v(". Any "),t("code",[e._v("und")]),e._v(" commands\nintended for DevNet should use the flag "),t("code",[e._v("--chain-id FUND-DevNet-2")])])]),e._v(" "),t("h2",{attrs:{id:"devnet-rpc-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devnet-rpc-nodes"}},[e._v("#")]),e._v(" DevNet RPC Nodes")]),e._v(" "),t("p",[e._v("By default "),t("code",[e._v("und")]),e._v(" will attempt to broadcast transactions to tcp://localhost:26656. However, any of the DevNet\nnodes can be used to send transactions via "),t("code",[e._v("und")]),e._v(" using the "),t("code",[e._v("--node=")]),e._v(" flag, for example:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("und query tx TX_HASH --chain-id FUND-DevNet-2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--node")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("tcp://172.25.0.3:26661\n")])])]),t("p",[e._v("See below for each node's RPC IPs and Ports.")]),e._v(" "),t("h2",{attrs:{id:"devnet-docker-containers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devnet-docker-containers"}},[e._v("#")]),e._v(" DevNet Docker containers")]),e._v(" "),t("p",[e._v("The DevNet composition will spin up three full validator nodes and a proxy server in the following\nDocker containers:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("dn_node1")]),e._v(" - Full validation node, RPC on 172.25.0.3:26661, P2P on 172.25.0.3:26651")]),e._v(" "),t("li",[t("code",[e._v("dn_node2")]),e._v(" - Full validation node, RPC on 172.25.0.4:26662, P2P on 172.25.0.4:26652")]),e._v(" "),t("li",[t("code",[e._v("dn_node3")]),e._v(" - Full validation node, RPC on 172.25.0.5:26663, P2P on 172.25.0.5:26653")]),e._v(" "),t("li",[t("code",[e._v("proxy")]),e._v(" - a small proxy server allowing CORS queries to the "),t("code",[e._v("dn_node1")]),e._v(" REST API via 172.25.0.7:1318")])]),e._v(" "),t("p",[e._v("The RPC interface is available via "),t("code",[e._v("dn_node1")]),e._v(" on port "),t("code",[e._v("26661")]),e._v(", and non-CORS REST on port "),t("code",[e._v("1317")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("The DevNet nodes:"),t("br"),e._v("\nP2P ports set to 26651, 26652 and 26653 respectively, and not the default 26656."),t("br"),e._v("\nRPC ports set to 26661, 26662 and 26663 respectively, and not the default 26657.")])]),e._v(" "),t("h2",{attrs:{id:"devnet-test-accounts-wallets-and-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devnet-test-accounts-wallets-and-keys"}},[e._v("#")]),e._v(" DevNet test accounts, wallets and keys")]),e._v(" "),t("p",[e._v("DevNet is deployed with a pre-defined\n"),t("a",{attrs:{href:"https://raw.githubusercontent.com/unification-com/mainchain/master/Docker/assets/node1/config/genesis.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("genesis.json"),t("OutboundLink")],1),e._v(",\ncontaining several test accounts loaded with FUND and pre-defined validators with self delegation.")]),e._v(" "),t("p",[e._v("See "),t("a",{attrs:{href:"https://github.com/unification-com/mainchain/blob/master/Docker/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/unification-com/mainchain/blob/master/Docker/README.md"),t("OutboundLink")],1),e._v("\nfor the mnemonic phrases and keys used by the above nodes, and for test accounts included in DevNet's genesis.")]),e._v(" "),t("h3",{attrs:{id:"importing-the-devnet-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#importing-the-devnet-keys"}},[e._v("#")]),e._v(" Importing the DevNet keys")]),e._v(" "),t("p",[e._v("The DevNet accounts can be imported as follows. First, build the "),t("code",[e._v("und")]),e._v(" and\n"),t("code",[e._v("und")]),e._v(" binaries:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" build\n")])])]),t("p",[e._v("Then, for each account run the following command:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./build/und keys "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" devnet_node1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--recover")]),e._v("\n")])])]),t("p",[e._v("You will be prompted to enter the mnemonic phrase, and a password for your OS's keyring. Change "),t("code",[e._v("devnet_node1")]),e._v(" to an\nappropriate moniker for each imported account.")]),e._v(" "),t("h3",{attrs:{id:"useful-devnet-defaults-for-und"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useful-devnet-defaults-for-und"}},[e._v("#")]),e._v(" Useful DevNet Defaults for "),t("code",[e._v("und")])]),e._v(" "),t("p",[t("code",[e._v("und")]),e._v(" defaults for DevNet can be set as follows. This will set the corresponding values in\n"),t("code",[e._v("$HOME/.und_mainchain/config/client.toml")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("und config chain-id FUND-DevNet-2\nund config node tcp://localhost:26661\n")])])]),t("h3",{attrs:{id:"rest-api-endpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rest-api-endpoints"}},[e._v("#")]),e._v(" REST API Endpoints")]),e._v(" "),t("p",[e._v("With DevNet up, the REST API endpoints can be seen via "),t("a",{attrs:{href:"http://localhost:1317/swagger/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:1317/swagger/"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[e._v("#")]),e._v(" Next")]),e._v(" "),t("p",[e._v("Creating and importing "),t("RouterLink",{attrs:{to:"/mainchain/networks/devnet/accounts-wallets.html"}},[e._v("accounts and wallets")]),e._v(", "),t("RouterLink",{attrs:{to:"/mainchain/networks/devnet/transactions.html"}},[e._v("sending transactions")])],1)])}),[],!1,null,null,null);t.default=s.exports}}]);