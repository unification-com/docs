(window.webpackJsonp=window.webpackJsonp||[]).push([[493],{774:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vor-quickstart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vor-quickstart"}},[t._v("#")]),t._v(" VOR Quickstart")]),t._v(" "),s("p",[t._v("Example implementations can be found at\n"),s("a",{attrs:{href:"https://github.com/unification-com/vor-demos",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/unification-com/vor-demos"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"integration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integration"}},[t._v("#")]),t._v(" Integration")]),t._v(" "),s("p",[t._v("In order to request randomness,you will need to import the "),s("code",[t._v("VORConsumerBase.sol")]),t._v(" smart contract\nand set up some simple functions within your smart contract. It is advisable to also implement\nOpenZeppelin's "),s("code",[t._v("Ownable")]),t._v(" functionality to secure functions:")]),t._v(" "),s("ol",[s("li",[t._v("Add the packages to your project:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yarn add @unification-com/xfund-vor\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("In your smart contract, import "),s("code",[t._v("VORConsumerBase.sol")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-solidity extra-class"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@unification-com/xfund-vor/contracts/VORConsumerBase.sol"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Extend your contract, adding "),s("code",[t._v("is VORConsumerBase")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-solidity extra-class"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRandomNumberContract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" VORConsumerBase "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Ensure your "),s("code",[t._v("constructor")]),t._v(" function has at least two parameters to accept the "),s("code",[t._v("VORCoordinator")]),t._v("\nand "),s("code",[t._v("xFUND")]),t._v(" smart contract addresses, and pass them to the "),s("code",[t._v("ConsumerBase")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-solidity extra-class"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _vorCoordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _xfund"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VORConsumerBase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_vorCoordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _xfund"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other stuff...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("Implement a "),s("code",[t._v("requestRandomness")]),t._v(" function, for example:")])]),t._v(" "),s("div",{staticClass:"language-solidity extra-class"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestRandomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" _userProvidedSeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" _keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unit256 _fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" \nonlyOwner \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xFUND"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("balanceOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" _fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not enough xFUND to pay fee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    requestId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestRandomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _userProvidedSeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RandomnessRequested")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("Implement the "),s("code",[t._v("fulfillRandomness")]),t._v(" function for data Providers to send data, for example:")])]),t._v(" "),s("div",{staticClass:"language-solidity extra-class"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fulfillRandomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" randomness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("internal")]),t._v(" override "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something with the received number")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" randVal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" randomness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// then for example, emit an event")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RandomnessReceived")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" randomness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("You should now be ready to compile and deploy your smart contract with your preferred toolchain\n(Truffle, Hardhat etc.)")]),t._v(" "),s("h2",{attrs:{id:"initialisation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialisation"}},[t._v("#")]),t._v(" Initialisation")]),t._v(" "),s("p",[t._v("Assuming the most basic implementation outlined above, once integrated, compiled and deployed,\nyou will need to send some transactions to the Ethereum blockchain in order to initialise the fee\npayment and data acquisition environment. This involves:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Increasing the "),s("code",[t._v("xFUND")]),t._v(" token allowance on the "),s("code",[t._v("VORCoordinator")]),t._v(" smart contract, in order for the "),s("code",[t._v("VORCoordinator")]),t._v("\nto accept and pay xFUND fees to VOR providers. This need only be run once, if the initial\nallowance is set high enough.")])]),t._v(" "),s("li",[s("p",[t._v("Transfer some "),s("code",[t._v("xFUND")]),t._v(" tokens to your smart contract, that is integrating the Consumer Library.\nThis allows you to submit randomness requests, and your contract to pay fees. The required amount\nof "),s("code",[t._v("xFUND")]),t._v(" to pay for a request fee is sent to the "),s("code",[t._v("VORCoordinator")]),t._v(" with each request.")]),t._v(" "),s("p",[s("strong",[t._v("Note")]),t._v(": The "),s("code",[t._v("xFUNDMOCK")]),t._v(" Token on Rinkeby testnet has a faucet function, "),s("code",[t._v("gimme()")]),t._v(" which can be used\nto grab some test tokens.")])])]),t._v(" "),s("p",[t._v("Once these steps have been run through, you will be able to initialise data requests via your\nsmart contract.")]),t._v(" "),s("h2",{attrs:{id:"requesting-randomness"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requesting-randomness"}},[t._v("#")]),t._v(" Requesting Randomness")]),t._v(" "),s("p",[t._v("Once the environment has been initialised, you will be able to request randomness")]),t._v(" "),s("p",[t._v("Requesting a random number is a simple case of calling your "),s("code",[t._v("requestRandomness")]),t._v(" function\nand passing the relevant data - i.e. a seed (can be any number), the key hash of the provider\n(supplied by them), for example see "),s("RouterLink",{attrs:{to:"/vor/contracts.html"}},[t._v("Contracts")]),t._v(", and the required fee amount\nto pay for the request.")],1),t._v(" "),s("p",[t._v("The selected VOR Oracle (defied by the key hash you send) will see the request, generate a random\nnumber and submit it via the "),s("code",[t._v("VORCoordinator")]),t._v(" to your defined "),s("code",[t._v("fulfillRandomness")]),t._v(" function. Once\nreceived, you can do whatever you need with the number.")]),t._v(" "),s("p",[t._v("For a full implementation run through, see our "),s("RouterLink",{attrs:{to:"/vor/guide/implementation.html"}},[t._v("implementation guide")]),t._v(".")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);