(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{353:function(t,e,n){"use strict";n.r(e);var a=n(14),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"light-client-rest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#light-client-rest"}},[t._v("#")]),t._v(" Light Client/REST")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("und")]),t._v(" binary comes packaged with a full REST capable server, from which the majority of\nthe "),e("code",[t._v("und query ...")]),t._v(" and "),e("code",[t._v("und tx ...")]),t._v(" commands can also be served.")]),t._v(" "),e("p",[t._v("The REST server is generally useful for third party services such as\n"),e("a",{attrs:{href:"https://github.com/unification-com/web-wallet",target:"_blank",rel:"noopener noreferrer"}},[t._v("wallets"),e("OutboundLink")],1),t._v(" and\n"),e("a",{attrs:{href:"https://github.com/unification-com/mainchain-explorer",target:"_blank",rel:"noopener noreferrer"}},[t._v("block explorers"),e("OutboundLink")],1),t._v(". It interacts with, and can be used\nalongside the "),e("code",[t._v("und")]),t._v(" RPC interface.")]),t._v(" "),e("h4",{attrs:{id:"contents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#prerequisites"}},[t._v("Prerequisites")])]),e("li",[e("a",{attrs:{href:"#running-a-light-client"}},[t._v("Running a light client")])]),e("li",[e("a",{attrs:{href:"#running-an-archive-rpc-node"}},[t._v("Running an Archive RPC node")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),e("p",[t._v("Before continuing, ensure you have gone through the following docs:")]),t._v(" "),e("ol",[e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/cosmovisor/install_und_with_cosmovisor.html"}},[t._v("Install und with Cosmovisor")])],1)]),t._v(" "),e("h2",{attrs:{id:"running-a-light-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-a-light-client"}},[t._v("#")]),t._v(" Running a light client")]),t._v(" "),e("p",[t._v("The Light Client can be started by setting the configuring options for a full node in "),e("code",[t._v("app.toml")]),t._v(" as follows:")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("api")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("enable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("swagger")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("address")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp://0.0.0.0:1317"')]),t._v("\n")])])]),e("p",[t._v("Then running the "),e("code",[t._v("und start")]),t._v(" command as normal")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und start\n")])])]),e("p",[t._v("This will start the light client on your local host listening on "),e("code",[t._v("localhost:1317")]),t._v(", and use the node\nhosted at "),e("code",[t._v("11.22.33.44:26657")]),t._v(" to source its data and interface with the "),e("code",[t._v("FUND-Mainchain-TestNet-v8")]),t._v(" chain\n(e.g. broadcast any transactions).")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("setting the listen address IP to "),e("code",[t._v("0.0.0.0")]),t._v(", e.g. "),e("code",[t._v("tcp://0.0.0.0:1317")]),t._v(" will allow any host to connect to your REST server.")])]),t._v(" "),e("p",[t._v("Once running, you can visit "),e("a",{attrs:{href:"http://localhost:1317/swagger/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:1317/swagger/"),e("OutboundLink")],1),t._v(" to view all the REST\nendpoints available.")]),t._v(" "),e("h2",{attrs:{id:"running-an-archive-rpc-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-an-archive-rpc-node"}},[t._v("#")]),t._v(" Running an Archive RPC node")]),t._v(" "),e("p",[t._v('Light Clients are more effective when interfacing with full nodes running in "archive" mode. Nodes running in archive\nmode do not prune any sync data, and keep a complete transaction event history.')]),t._v(" "),e("p",[t._v("The quickest way to get up and running with an archive node is to configure the pruning option in\n"),e("code",[t._v("$HOME/.und_mainchain/config/app.toml")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("pruning")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nothing"')]),t._v("\n")])])]),e("p",[t._v("Then, start the full node as usual using:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("und start\n")])])]),e("p",[t._v("Your light client can then be configured to connect to it via the "),e("code",[t._v("--node")]),t._v(" flag by passing "),e("code",[t._v("tcp://127.0.0.1:26657")]),t._v(" to it.")])])}),[],!1,null,null,null);e.default=s.exports}}]);