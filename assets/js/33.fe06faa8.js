(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{314:function(t,a,e){"use strict";e.r(a);var s=e(14),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ibc-transfer-to-gravity-bridge-via-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibc-transfer-to-gravity-bridge-via-cli"}},[t._v("#")]),t._v(" IBC Transfer to Gravity Bridge via CLI")]),t._v(" "),a("p",[t._v("This guide will cover the commands required to send FUND from Unification over IBC to the ERC20 wFUND contract on\nEthereum mainnet, and back again. The guide assumes any wallets the reader has (Unification, Gravity Bridge and\nEthereum) are sufficiently funded to cover any gas fees on the respective chains in addition to the FUND being\ntransferred.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("This guide is for advanced users. If you are not comfortable using CLI, please refer to the "),a("RouterLink",{attrs:{to:"/mainchain/ibc/gravity-bridge/web-portal.html"}},[t._v("Web Portal")]),t._v("\nguide.")],1),t._v(" "),a("p",[a("strong",[t._v("Disclaimer: you are responsible for the safety and security of your mnemonics, private keys and crypto assets!\nPlease keep your mnemonics and keys safe, and only send small amounts until you are comfortable and\nconfident with the process!")])])]),t._v(" "),a("h2",{attrs:{id:"ibc-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibc-overview"}},[t._v("#")]),t._v(" IBC Overview")]),t._v(" "),a("h3",{attrs:{id:"unification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unification"}},[t._v("#")]),t._v(" Unification")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Chain ID")]),t._v(": "),a("code",[t._v("FUND-MainNet-2")])]),t._v(" "),a("li",[a("strong",[t._v("Channel")]),t._v(": "),a("code",[t._v("channel-2")])]),t._v(" "),a("li",[a("strong",[t._v("Denom")]),t._v(": "),a("code",[t._v("nund")])])]),t._v(" "),a("h3",{attrs:{id:"gravity-bridge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gravity-bridge"}},[t._v("#")]),t._v(" Gravity Bridge")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Chain ID")]),t._v(": "),a("code",[t._v("gravity-bridge-3")])]),t._v(" "),a("li",[a("strong",[t._v("Channel")]),t._v(": "),a("code",[t._v("channel-98")])]),t._v(" "),a("li",[a("strong",[t._v("Denom")]),t._v(": "),a("code",[t._v("ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519")])])]),t._v(" "),a("h3",{attrs:{id:"ethereum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ethereum"}},[t._v("#")]),t._v(" Ethereum")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Chain ID")]),t._v(": "),a("code",[t._v("1")])]),t._v(" "),a("li",[a("strong",[t._v("wFUND Contract")]),t._v(": "),a("a",{attrs:{href:"https://etherscan.io/token/0xe9b076b476d8865cdf79d1cf7df420ee397a7f75",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("0xe9b076b476d8865cdf79d1cf7df420ee397a7f75")]),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"software-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#software-requirements"}},[t._v("#")]),t._v(" Software Requirements")]),t._v(" "),a("p",[t._v("The required binaries for your operating system are as follows:")]),t._v(" "),a("ol",[a("li",[t._v("The latest "),a("code",[t._v("und")]),t._v(" binary. See "),a("RouterLink",{attrs:{to:"/mainchain/software/installation.html"}},[t._v("Installing the Mainchain Software")]),t._v(" or\ndownload directly from "),a("a",{attrs:{href:"https://github.com/unification-com/mainchain/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("und")]),t._v(" Releases"),a("OutboundLink")],1),t._v(" on GitHub")],1),t._v(" "),a("li",[t._v("The latest "),a("code",[t._v("gravity")]),t._v(" and "),a("code",[t._v("gbt")]),t._v(" binaries. See\n"),a("a",{attrs:{href:"https://github.com/Gravity-Bridge/Gravity-Bridge/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gravity Bridge Releases"),a("OutboundLink")],1),t._v(" on GitHub")])]),t._v(" "),a("p",[t._v("Each binary can be installed into, for example "),a("code",[t._v("/usr/local/bin")]),t._v(". The remainder of this guide assumes the binaries are\nincluded somewhere in your "),a("code",[t._v("$PATH")])]),t._v(" "),a("h2",{attrs:{id:"create-recover-wallets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-recover-wallets"}},[t._v("#")]),t._v(" Create/Recover wallets")]),t._v(" "),a("p",[t._v("Three wallet addresses are required - one for each network. The same mnemonic can be used for all three, or a unique\none can be created for each. This guide will create new keys for both "),a("code",[t._v("und")]),t._v(" and "),a("code",[t._v("gravity")]),t._v(", and use the same mnemonic.")]),t._v(" "),a("p",[t._v("For Unification and Gravity Bridge, the wallets will need creating/importing into the respective "),a("code",[t._v("und")]),t._v(" and "),a("code",[t._v("gravity")]),t._v("\nkeystores.")]),t._v(" "),a("p",[t._v("For Ethereum, only the private key hex is required, and only for the "),a("code",[t._v("eth-to-cosmos")]),t._v(" command towards the end of the\nguide. This can be exported from, for example, MetaMask. It is assumed the reader already has an Ethereum wallet with\nsufficient Ether.")]),t._v(" "),a("h3",{attrs:{id:"und"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#und"}},[t._v("#")]),t._v(" "),a("code",[t._v("und")])]),t._v(" "),a("p",[t._v("First, create a new wallet in the "),a("code",[t._v("und")]),t._v(" keystore:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("und keys "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" fund_ibc_wallet\n")])])]),a("p",[t._v("Safely make a note of the Mnemonic and wallet address, and ensure the wallet has some FUND transferred into it")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Instead of creating a new wallet, you can use an existing mnemonic - just add the "),a("code",[t._v("--recover")]),t._v(" to the "),a("code",[t._v("und")]),t._v(" command\nabove and follow the prompts.")])]),t._v(" "),a("h3",{attrs:{id:"gravity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gravity"}},[t._v("#")]),t._v(" "),a("code",[t._v("gravity")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("gravity")]),t._v(" command is the same, but we'll pass the "),a("code",[t._v("--recover")]),t._v(" flag in order to use the mnemonic output in the\nprevious step:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity keys "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" grav_ibc_wallet "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recover")]),t._v("\n")])])]),a("p",[t._v("Similarly, make a note of the wallet address.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Although IBC Transactions are "),a("em",[t._v("currently")]),t._v(" free on Gravity Bridge, ensure the wallet has some GRAV available\nin the event that this changes in the future.")])]),t._v(" "),a("h2",{attrs:{id:"send-fund-from-unification-to-gravity-bridge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#send-fund-from-unification-to-gravity-bridge"}},[t._v("#")]),t._v(" Send FUND from Unification to Gravity Bridge")]),t._v(" "),a("p",[t._v("As an example, we'll send 200 FUND. The official channel to send FUND via IBC to Gravity Bridge is "),a("code",[t._v("channel-2")]),t._v(". Change\n"),a("code",[t._v("<YOUR_gravity_WALLET_ADDRESS>")]),t._v(" to the bech32 "),a("code",[t._v("gravity")]),t._v(" prefixed address from the previous "),a("code",[t._v("gravity keys add...")]),t._v(" command.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("und tx ibc-transfer transfer transfer channel-2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_gravity_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 200000000000nund "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--from")]),t._v(" fund_ibc_wallet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--gas")]),t._v(" auto "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --gas-adjustment "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --gas-prices "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(".0nund "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FUND-MainNet-2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://rpc1.unification.io:443"')]),t._v("\n")])])]),a("p",[t._v("Within a few blocks, you should see the IBC FUND in your "),a("code",[t._v("gravity")]),t._v(" wallet -")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity query bank balances "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_gravity_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" https://gravitychain.io:26657 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id gravity-bridge-3\n")])])]),a("p",[t._v("will output something like:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("balances")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"200000000000"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("denom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000000"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("denom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ugraviton\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pagination")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("next_key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("total")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n")])])]),a("p",[a("code",[t._v("ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519")]),t._v(" is the "),a("code",[t._v("nund")]),t._v(" IBC denomination on Gravity Bridge.")]),t._v(" "),a("h2",{attrs:{id:"send-ibc-fund-from-gravity-bridge-to-wfund-erc-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#send-ibc-fund-from-gravity-bridge-to-wfund-erc-20"}},[t._v("#")]),t._v(" Send IBC FUND from Gravity Bridge to wFUND ERC-20")]),t._v(" "),a("p",[t._v("Once you have confirmed that the IBC FUND is in your Gravity Bridge wallet, you should be able to send some across the\nbridge to the wFUND ERC-20 on Ethereum.")]),t._v(" "),a("p",[t._v("In this example, we'll send 100 FUND, and set the Bridge Fees to 20 FUND. This should hopefully be sent in a batch by\nthe Gravity Bridge relayers in a few hours (although it could take less or more time, depending on the number of pending\nbridge transactions).")]),t._v(" "),a("p",[t._v("We'll be using the "),a("code",[t._v("gravity")]),t._v(" binary to do so, replacing "),a("code",[t._v("<0xYOUR_ETH_WALLET>")]),t._v(" with the Ethereum wallet address in which\nyou wish to receive the wFUND:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity tx gravity send-to-eth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("0xYOUR_ETH_WALLET"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  100000000000ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  2000000000ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" https://gravitychain.io:26657 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--fees")]),t._v(" 0ugraviton "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id gravity-bridge-3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--from")]),t._v(" grav_ibc_wallet\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The second value, "),a("code",[t._v("2000000000ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519")]),t._v(' is the "bridge fee".\nThis is how much FUND you are willing to pay a relayer to bridge for you - because relaying on Ethereum costs the\nrelayer Eth in gas fees. Higher bridge fees should - '),a("em",[t._v("in theory")]),t._v(" - result in faster transfers. Lower fees will mean your\ntransfer may need to wait to be included by a relayer into a profitable batch, and as a result will take longer.")])]),t._v(" "),a("p",[t._v("Once sent, you will be able to query the status of your bridge transfer:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity query gravity pending-send-to-eth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_gravity_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" https://gravitychain.io:26657 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id gravity-bridge-3\n")])])]),a("p",[t._v("This will output something like:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("transfers_in_batches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("unbatched_transfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dest_address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <0xYOUR_ETH_WALLET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("erc20_fee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20000000000"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xe9B076B476D8865cDF79D1Cf7DF420EE397a7f75")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("erc20_token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100000000000"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xe9B076B476D8865cDF79D1Cf7DF420EE397a7f75")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sender")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <YOUR_gravity_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("If your transaction is in the "),a("code",[t._v("unbatched_transfers")]),t._v(" array, it is waiting for a relayer to add it to a batch."),a("br"),t._v("\nIf your transaction is in the "),a("code",[t._v("transfers_in_batches")]),t._v(", it has been batched and is waiting for a relayer to send it to\nthe ERC-20.")]),t._v(" "),a("p",[t._v("After some time, you should see 100 FUND in your Ethereum wallet.")]),t._v(" "),a("h3",{attrs:{id:"cancelling-an-erc-20-bridge-transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cancelling-an-erc-20-bridge-transaction"}},[t._v("#")]),t._v(" Cancelling an ERC-20 Bridge Transaction")]),t._v(" "),a("p",[t._v("If your transaction remains in "),a("code",[t._v("unbatched_transfers")]),t._v(" for a long time, you can cancel the transaction and try again with\na different bridge fee.")]),t._v(" "),a("p",[t._v("Make a note of the "),a("code",[t._v("id")]),t._v(" value form the output of the previous command - in this case it's "),a("code",[t._v("1234")]),t._v(". Then run the\nfollowing, replacing "),a("code",[t._v("<THE_ID>")]),t._v(" with the ID of the transaction you would like to cancel:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity tx gravity cancel-send-to-eth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("THE_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" https://gravitychain.io:26657 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--fees")]),t._v(" 0ugraviton "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id gravity-bridge-3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--from")]),t._v(" grav_ibc_wallet\n")])])]),a("p",[t._v("Your IBC FUND will be returned to your "),a("code",[t._v("gravity")]),t._v(" wallet, and the bridge transfer to ERC-20 cancelled.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Only transactions in "),a("code",[t._v("unbatched_transfers")]),t._v(" can be cancelled.")])]),t._v(" "),a("h2",{attrs:{id:"send-from-wfund-erc-20-to-gravity-bridge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#send-from-wfund-erc-20-to-gravity-bridge"}},[t._v("#")]),t._v(" Send from wFUND ERC-20 to Gravity Bridge")]),t._v(" "),a("p",[t._v("Sending from the ERC-20 to Gravity Bridge requires the "),a("code",[t._v("gbt")]),t._v(" binary. In this example, we'll send 50 wFUND back to\nGravity Bridge chain from the ERC-20 contract. Replacing "),a("code",[t._v("<0xETH_PRIVATE_KEY>")]),t._v(" accordingly, run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gbt client eth-to-cosmos "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --ethereum-key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("0xETH_PRIVATE_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --gravity-contract-address "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xa4108aA1Ec4967F8b52220a4f7e94A8201F2D906"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --token-contract-address "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xe9B076B476D8865cDF79D1Cf7DF420EE397a7f75"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amount")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--destination")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_gravity_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --ethereum-rpc https://eth.althea.net\n")])])]),a("ul",[a("li",[a("code",[t._v("--ethereum-key")]),t._v(" should be the private key for the Ethereum wallet currently containing the 100 wFUND.")]),t._v(" "),a("li",[a("code",[t._v("--gravity-contract-address")]),t._v(" is the current address of "),a("code",[t._v("Gravity.sol")]),t._v(". This is "),a("code",[t._v("0xa4108aA1Ec4967F8b52220a4f7e94A8201F2D906")]),t._v("\nat the time of writing")]),t._v(" "),a("li",[a("code",[t._v("--token-contract-address")]),t._v(" is the ERC-20 contract address of wFUND, "),a("code",[t._v("0xe9B076B476D8865cDF79D1Cf7DF420EE397a7f75")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("--destination")]),t._v(" is the bech32 "),a("code",[t._v("gravity")]),t._v(" prefixed wallet address you are sending to on Gravity Bridge.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("You may want to wipe the last command from your command line history (for example "),a("code",[t._v("$HOME/bash_history")]),t._v(") to prevent\nyour Ethereum private key from being stored in history, for example:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" -2--1\n")])])]),a("p",[t._v("will delete the last two commands from your CLI history (including the "),a("code",[t._v("history -d -2--1")]),t._v(" just run)")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("gbt client eth-to-cosmos")]),t._v(" command will output several lines - one of which will be the Ethereum Tx hash, which you\ncan use to monitor process with for example Etherscan. For example:")]),t._v(" "),a("div",{staticClass:"language-log extra-class"},[a("pre",{pre:!0,attrs:{class:"language-log"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token date number"}},[t._v("2022-11-21T")]),a("span",{pre:!0,attrs:{class:"token time number"}},[t._v("10:24:25Z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token level info keyword"}},[t._v("INFO")]),t._v("  gbt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("eth_to_cosmos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Sending "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000000000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xe9B076B476D8865cDF79D1Cf7DF420EE397a7f75")]),t._v(" to Cosmos from "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" to gravity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token date number"}},[t._v("2022-11-21T")]),a("span",{pre:!0,attrs:{class:"token time number"}},[t._v("10:24:27Z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token level info keyword"}},[t._v("INFO")]),t._v("  ethereum_gravity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("send_to_cosmos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" sending to on cosmos gravity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token date number"}},[t._v("2022-11-21T")]),a("span",{pre:!0,attrs:{class:"token time number"}},[t._v("10:24:38Z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token level info keyword"}},[t._v("INFO")]),t._v("  gbt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("eth_to_cosmos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Send to Cosmos txid:")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token date number"}},[t._v("2022-11-21T")]),a("span",{pre:!0,attrs:{class:"token time number"}},[t._v("10:24:38Z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token level info keyword"}},[t._v("INFO")]),t._v("  gbt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("eth_to_cosmos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Your tokens should show up in the account gravity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" on the destination chain within "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" minutes\n")])])]),a("p",[t._v("The FUND should appear back in your "),a("code",[t._v("gravity")]),t._v(" wallet after "),a("strong",[t._v("96")]),t._v(" Ethereum block confirmations. At the time of writing,\nthis is approximately 25 minutes.")]),t._v(" "),a("h2",{attrs:{id:"send-from-gravity-bridge-to-unification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#send-from-gravity-bridge-to-unification"}},[t._v("#")]),t._v(" Send from Gravity Bridge to Unification")]),t._v(" "),a("p",[t._v("Finally, we'll use the "),a("code",[t._v("gravity")]),t._v(" binary to send 50 FUND back to Unification, replacing "),a("code",[t._v("<YOUR_und_WALLET_ADDRESS>")]),t._v(" with\nyour "),a("code",[t._v("und")]),t._v(" wallet address from the first steps:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gravity tx ibc-transfer transfer transfer channel-98 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_und_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  50000000000ibc/D157AD8A50DAB0FC4EB95BBE1D9407A590FA2CDEE04C90A76C005089BF76E519 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--from")]),t._v(" grav_ibc_wallet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--gas")]),t._v(" auto "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --gas-adjustment "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --gas-prices 0ugraviton "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" https://gravitychain.io:26657 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id gravity-bridge-3\n")])])]),a("p",[t._v("After a few blocks, you should see the FUND back in your Unification wallet:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("und query bank balances "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("YOUR_und_WALLET_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FUND-MainNet-2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://rpc1.unification.io:443"')]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);