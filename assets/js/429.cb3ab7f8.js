(window.webpackJsonp=window.webpackJsonp||[]).push([[429],{709:function(t,e,n){"use strict";n.r(e);var a=n(14),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"und-tx-simulate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#und-tx-simulate"}},[t._v("#")]),t._v(" und tx simulate")]),t._v(" "),e("p",[t._v("Simulate the gas usage of a transaction")]),t._v(" "),e("h3",{attrs:{id:"synopsis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synopsis"}},[t._v("#")]),t._v(" Synopsis")]),t._v(" "),e("p",[t._v("Simulate whether a transaction will be successful:")]),t._v(" "),e("ul",[e("li",[t._v("if successful, the simulation result is printed, which includes the gas\nconsumption, message response data, and events emitted;")]),t._v(" "),e("li",[t._v("if unsuccessful, the error message is printed.")])]),t._v(" "),e("p",[t._v('The user must provide the path to a JSON-encoded unsigned transaction, typically\ngenerated by any transaction command with the --generate-only flag. It should\nlook like below. Note that the "signer_infos" and "signatures" fields are left\nempty; they will be auto-populated by dummy data for simulation purpose.')]),t._v(" "),e("p",[t._v('{\n"body": {\n"messages": [\n{\n"@type": "/cosmos.bank.v1beta1.MsgSend",\n"from_address": "cosmos1...",\n"to_address": "cosmos1...",\n"amount": [\n{\n"denom": "utoken",\n"amount": "12345"\n}\n]\n}\n],\n"memo": "",\n"timeout_height": "0",\n"extension_options": [],\n"non_critical_extension_options": []\n},\n"auth_info": {\n"signer_infos": [],\n"fee": {\n"amount": [],\n"gas_limit": "200000",\n"payer": "",\n"granter": ""\n},\n"tip": null\n},\n"signatures": []\n}')]),t._v(" "),e("p",[t._v("The --from flag is mandatory, as the signer account's correct sequence number is\nnecessary for simulation.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("und tx simulate /path/to/unsigned-tx.json --from keyname [flags]\n")])])]),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default "sync")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don\'t broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn\'t always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for simulate\n      --keyring-backend string   Select keyring\'s backend (os|file|kwallet|pass|test|memory) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              &lt;host&gt;:&lt;port&gt; to CometBFT rpc interface for this chain (default "tcp://localhost:26657")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default "json")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux|textual), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn\'t enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n')])])]),e("h3",{attrs:{id:"see-also"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" SEE ALSO")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_tx.html"}},[t._v("und tx")]),t._v("\t - Transactions subcommands")],1)]),t._v(" "),e("h6",{attrs:{id:"auto-generated-by-spf13-cobra-on-6-may-2025"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-generated-by-spf13-cobra-on-6-may-2025"}},[t._v("#")]),t._v(" Auto generated by spf13/cobra on 6-May-2025")])])}),[],!1,null,null,null);e.default=s.exports}}]);