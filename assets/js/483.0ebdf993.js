(window.webpackJsonp=window.webpackJsonp||[]).push([[483],{763:function(e,t,s){"use strict";s.r(t);var n=s(14),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vorrequestidbase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vorrequestidbase"}},[e._v("#")]),e._v(" VORRequestIDBase")]),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#VORRequestIDBase-makeVORInputSeed-bytes32-uint256-address-uint256-"}},[t("code",[e._v("makeVORInputSeed(bytes32 _keyHash, uint256 _userSeed, address _requester, uint256 _nonce) internal")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#VORRequestIDBase-makeRequestId-bytes32-uint256-"}},[t("code",[e._v("makeRequestId(bytes32 _keyHash, uint256 _vORInputSeed) internal")])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"VORRequestIDBase-makeVORInputSeed-bytes32-uint256-address-uint256-"}})]),e._v(" "),t("h3",{attrs:{id:"function-makevorinputseed-bytes32-keyhash-uint256-userseed-address-requester-uint256-nonce-internal-uint256"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function-makevorinputseed-bytes32-keyhash-uint256-userseed-address-requester-uint256-nonce-internal-uint256"}},[e._v("#")]),e._v(" Function "),t("code",[e._v("makeVORInputSeed(bytes32 _keyHash, uint256 _userSeed, address _requester, uint256 _nonce) internal -> uint256")])]),e._v(" "),t("p",[e._v("To prevent repetition of VOR output due to repetition of the\nuser-supplied seed, that seed is combined in a hash with the\nuser-specific nonce, and the address of the consuming contract. The\nrisk of repetition is mostly mitigated by inclusion of a blockhash in\nthe final seed, but the nonce does protect against repetition in\nrequests which are included in a single block.")]),e._v(" "),t("h4",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters:")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("_userSeed")]),e._v(": VOR seed input provided by user")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("_requester")]),e._v(": Address of the requesting contract")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("_nonce")]),e._v(": User-specific nonce at the time of the request\n"),t("a",{attrs:{name:"VORRequestIDBase-makeRequestId-bytes32-uint256-"}})])])]),e._v(" "),t("h3",{attrs:{id:"function-makerequestid-bytes32-keyhash-uint256-vorinputseed-internal-bytes32"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function-makerequestid-bytes32-keyhash-uint256-vorinputseed-internal-bytes32"}},[e._v("#")]),e._v(" Function "),t("code",[e._v("makeRequestId(bytes32 _keyHash, uint256 _vORInputSeed) internal -> bytes32")])]),e._v(" "),t("p",[e._v("Note that _vORInputSeed is not the seed passed by the consuming\ncontract, but the one generated by makeVORInputSeed")]),e._v(" "),t("h4",{attrs:{id:"parameters-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters-2"}},[e._v("#")]),e._v(" Parameters:")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("_keyHash")]),e._v(": The serviceAgreement ID to be used for this request")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("_vORInputSeed")]),e._v(": The seed to be passed directly to the VOR")])])]),e._v(" "),t("h4",{attrs:{id:"return-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#return-values"}},[e._v("#")]),e._v(" Return Values:")]),e._v(" "),t("ul",[t("li",[e._v("The id for this request")])])])}),[],!1,null,null,null);t.default=a.exports}}]);