(window.webpackJsonp=window.webpackJsonp||[]).push([[258],{540:function(t,a,e){"use strict";e.r(a);var n=e(14),s=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"und-query-ibc-channel-channels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#und-query-ibc-channel-channels"}},[t._v("#")]),t._v(" und query ibc channel channels")]),t._v(" "),a("p",[t._v("Query all channels")]),t._v(" "),a("h3",{attrs:{id:"synopsis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synopsis"}},[t._v("#")]),t._v(" Synopsis")]),t._v(" "),a("p",[t._v("Query all channels from a chain")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("und query ibc channel channels [flags]\n")])])]),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("und query ibc channel channels\n")])])]),a("h3",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('      --count-total        count total number of records in channels to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for channels\n      --limit uint         pagination limit of channels to query for (default 100)\n      --node string        &lt;host&gt;:&lt;port&gt; to CometBFT RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of channels to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of channels to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of channels to query for\n      --reverse            results are sorted in descending order\n')])])]),a("h3",{attrs:{id:"options-inherited-from-parent-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-inherited-from-parent-commands"}},[t._v("#")]),t._v(" Options inherited from parent commands")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("      --chain-id string   The network chain ID\n")])])]),a("h3",{attrs:{id:"see-also"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" SEE ALSO")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/mainchain/software/und_cmd/und_query_ibc_channel.html"}},[t._v("und query ibc channel")]),t._v("\t - IBC channel query subcommands")],1)]),t._v(" "),a("h6",{attrs:{id:"auto-generated-by-spf13-cobra-on-6-may-2025"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-generated-by-spf13-cobra-on-6-may-2025"}},[t._v("#")]),t._v(" Auto generated by spf13/cobra on 6-May-2025")])])}),[],!1,null,null,null);a.default=s.exports}}]);